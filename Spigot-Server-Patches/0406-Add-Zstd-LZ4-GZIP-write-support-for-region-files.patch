From 359544c68aecc33c5f945f827cccec97465f226f Mon Sep 17 00:00:00 2001
From: egg82 <eggys82@gmail.com>
Date: Fri, 26 Jul 2019 12:27:13 -0600
Subject: [PATCH] Add Zstd/LZ4/(GZIP write) support for region files

Zstd using zstd-jni: https://github.com/luben/zstd-jni
LZ4 using lz4-java: https://github.com/lz4/lz4-java
There's a new option in PaperConfig for this which defaults to false.
Since the patch hooks Mojang's versioning system for new compression methods, it
should be internally consistent, easily-updatable, and reversible with a force-upgrade.

This will likely conflict with plugins and programs expecting region files to be compressed using the current standard.

diff --git a/pom.xml b/pom.xml
index beda5dc8a..6ef72b759 100644
--- a/pom.xml
+++ b/pom.xml
@@ -106,6 +106,17 @@
             <version>5.1.47</version>
             <scope>runtime</scope>
         </dependency>
+        <!-- Paper - Zstd/LZ4 for region files -->
+        <dependency>
+            <groupId>com.github.luben</groupId>
+            <artifactId>zstd-jni</artifactId>
+            <version>1.4.2-1</version>
+        </dependency>
+        <dependency>
+            <groupId>org.lz4</groupId>
+            <artifactId>lz4-java</artifactId>
+            <version>1.6.0</version>
+        </dependency>
         <!-- testing -->
         <dependency>
             <groupId>junit</groupId>
diff --git a/src/main/java/com/destroystokyo/paper/PaperConfig.java b/src/main/java/com/destroystokyo/paper/PaperConfig.java
index 5942c3438..117ffd4ff 100644
--- a/src/main/java/com/destroystokyo/paper/PaperConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperConfig.java
@@ -388,4 +388,32 @@ public class PaperConfig {
         maxBookPageSize = getInt("settings.book-size.page-max", maxBookPageSize);
         maxBookTotalSizeMultiplier = getDouble("settings.book-size.total-multiplier", maxBookTotalSizeMultiplier);
     }
+
+    public static int compressionMethod = 2;
+    private static void compressionMethod() {
+        compressionMethod = getInt("settings.compression-method", 2);
+        if (compressionMethod < 0 || compressionMethod > 127 || (compressionMethod > 2 && compressionMethod < 126)) {
+            fatal("compression-method must be 0, 1, 2, 126, or 127");
+        }
+
+        if (compressionMethod == 127) {
+            log("Using Zstd compression.");
+        } else if (PaperConfig.compressionMethod == 126) {
+            log("Using LZ4 compression.");
+        } else if (PaperConfig.compressionMethod == 2) {
+            log("Using Zlib compression.");
+        } else if (PaperConfig.compressionMethod == 0) {
+            log("Using NOP (no) compression.");
+        } else {
+            log("Using GZIP compression.");
+        }
+    }
+
+    public static boolean zstdUseHighCompression = false;
+    private static void zstdUseHighCompression() {
+        zstdUseHighCompression = getBoolean("settings.zstd-use-high-compression", false);
+        if (compressionMethod == 127 && zstdUseHighCompression) {
+            log("Using high compression level (make my PC hurt).");
+        }
+    }
 }
diff --git a/src/main/java/net/minecraft/server/RegionFile.java b/src/main/java/net/minecraft/server/RegionFile.java
index 41f1e15cb..7f55e1b42 100644
--- a/src/main/java/net/minecraft/server/RegionFile.java
+++ b/src/main/java/net/minecraft/server/RegionFile.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import com.destroystokyo.paper.PaperConfig;
 import com.destroystokyo.paper.exception.ServerInternalException;
 import com.google.common.collect.Lists;
 import java.io.BufferedInputStream;
@@ -12,6 +13,7 @@ import java.io.File;
 import java.io.IOException;
 import java.io.RandomAccessFile;
 import java.util.List;
+import java.util.zip.DataFormatException;
 import java.util.zip.DeflaterOutputStream;
 import java.util.zip.GZIPInputStream;
 import java.util.zip.InflaterInputStream;
@@ -31,6 +33,18 @@ public class RegionFile implements AutoCloseable {
     private final int[] d = new int[1024];private int[] timestamps = d; // Paper - OBFHELPER
     private final List<Boolean> e; private List<Boolean> getFreeSectors() { return this.e; } // Paper - OBFHELPER
 
+    // Paper start - new & optimized compression
+    private static final java.util.zip.Inflater zlibInflater = new java.util.zip.Inflater();
+    private static final java.util.zip.Deflater zlibDeflater = new java.util.zip.Deflater();
+
+    private static final com.github.luben.zstd.ZstdDictCompress zstdDictCompressor;
+    private static final com.github.luben.zstd.ZstdDictCompress zstdDictHighCompressor;
+    private static final com.github.luben.zstd.ZstdDictDecompress zstdDictDecompressor;
+
+    private static final net.jpountz.lz4.LZ4FastDecompressor lz4Decompressor = net.jpountz.lz4.LZ4Factory.fastestJavaInstance().fastDecompressor();
+    private static final net.jpountz.lz4.LZ4Compressor lz4Compressor = net.jpountz.lz4.LZ4Factory.fastestJavaInstance().fastCompressor();
+    // Paper end
+
     // Paper start - Cache chunk status
     private final ChunkStatus[] statuses = new ChunkStatus[32 * 32];
 
@@ -131,6 +145,7 @@ public class RegionFile implements AutoCloseable {
         // Paper - we need this earlier
     }
 
+    private static final byte[] decompressionBuffer = new byte[1024 * 64]; // 64k fits most standard chunks input size even, ideally 1 pass through zlib // Paper - new compression support
     @Nullable
     public synchronized DataInputStream getReadStream(ChunkCoordIntPair chunkcoordintpair) { return this.a(chunkcoordintpair); } public synchronized DataInputStream a(ChunkCoordIntPair chunkcoordintpair) { // Paper - OBFHELPER
         try {
@@ -167,18 +182,95 @@ public class RegionFile implements AutoCloseable {
                         if (b0 == 1) {
                             abyte = new byte[l - 1];
                             this.b.read(abyte);
-                            return new DataInputStream(new BufferedInputStream(new GZIPInputStream(new ByteArrayInputStream(abyte))));
-                        } else if (b0 == 2) {
+
+                            return new DataInputStream(new BufferedInputStream(new GZIPInputStream(new ByteArrayInputStream(abyte), 32 * 1024), 32 * 1024)); // Paper - new & optimized compression
+                        }
+                        // Paper start - new & optimized compression
+                        else if (b0 == 2) {
+                            abyte = new byte[l - 1];
+                            this.b.read(abyte);
+
+                            int power = 1;
+                            byte[] outBuf = new byte[1024 * 64 * power];
+                            int totalBytes = 0;
+
+                            synchronized (zlibInflater) {
+                                zlibInflater.setInput(abyte, 0, abyte.length);
+                                int decompressedBytes;
+                                while (!zlibInflater.finished()) {
+                                    boolean resize = false;
+                                    decompressedBytes = zlibInflater.inflate(decompressionBuffer);
+
+                                    while (decompressedBytes > 1024 * 64 * power - totalBytes) {
+                                        power++;
+                                        resize = true;
+                                    }
+                                    if (resize) {
+                                        byte[] tmp = outBuf;
+                                        outBuf = new byte[1024 * 64 * power];
+                                        System.arraycopy(tmp, 0, outBuf, 0, totalBytes);
+                                    }
+
+                                    System.arraycopy(decompressionBuffer, 0, outBuf, totalBytes, decompressedBytes);
+                                    totalBytes += decompressedBytes;
+                                }
+                                zlibInflater.reset();
+                            }
+
+                            abyte = new byte[totalBytes];
+                            System.arraycopy(outBuf, 0, abyte, 0, totalBytes);
+
+                            return new DataInputStream(new BufferedInputStream(new ByteArrayInputStream(abyte), 32 * 1024));
+                        } else if (b0 == 0) {
+                            abyte = new byte[l - 1];
+                            this.b.read(abyte);
+
+                            return new DataInputStream(new BufferedInputStream(new ByteArrayInputStream(abyte), 32 * 1024));
+                        } else if (b0 == 126) {
+                            abyte = new byte[l - 1];
+                            this.b.read(abyte);
+
+                            return new DataInputStream(new BufferedInputStream(new net.jpountz.lz4.LZ4BlockInputStream(new ByteArrayInputStream(abyte), lz4Decompressor), 32 * 1024));
+                        } else if (b0 == 127) {
                             abyte = new byte[l - 1];
                             this.b.read(abyte);
-                            return new DataInputStream(new BufferedInputStream(new InflaterInputStream(new ByteArrayInputStream(abyte))));
-                        } else {
+
+                            int power = 1;
+                            byte[] outBuf;
+
+                            long decompressedBytes;
+                            boolean resize;
+                            do {
+                                resize = false;
+                                outBuf = new byte[1024 * 64 * power];
+
+                                decompressedBytes = com.github.luben.zstd.Zstd.decompressFastDict(outBuf, 0, abyte, 0, abyte.length, zstdDictDecompressor);
+                                if (com.github.luben.zstd.Zstd.isError(decompressedBytes)) {
+                                    if (com.github.luben.zstd.Zstd.getErrorCode(decompressedBytes) == com.github.luben.zstd.Zstd.errDstSizeTooSmall()) {
+                                        resize = true;
+                                    } else {
+                                        throw new com.github.luben.zstd.ZstdException(decompressedBytes);
+                                    }
+                                }
+
+                                if (resize) {
+                                    power++;
+                                }
+                            } while (resize);
+
+                            abyte = new byte[(int) decompressedBytes];
+                            System.arraycopy(outBuf, 0, abyte, 0, (int) decompressedBytes);
+
+                            return new DataInputStream(new BufferedInputStream(new ByteArrayInputStream(abyte), 32 * 1024));
+                        }
+                        // Paper end
+                        else {
                             return null;
                         }
                     }
                 }
             }
-        } catch (IOException ioexception) {
+        } catch (IOException | DataFormatException | com.github.luben.zstd.ZstdException ioexception) { // Paper - new & optimized compression
             ServerInternalException.reportInternalException(ioexception); // Paper
             return null;
         }
@@ -294,6 +386,7 @@ public class RegionFile implements AutoCloseable {
 
             // Paper - move this into writeChunkData
         } catch (IOException ioexception) {
+            ioexception.printStackTrace();
             com.destroystokyo.paper.util.SneakyThrow.sneaky(ioexception); // Paper - we want the upper try/catch to retry this
         }
 
@@ -302,7 +395,7 @@ public class RegionFile implements AutoCloseable {
     private void writeChunkData(final int sectorOffset, final byte[] data, final int dataLength) throws IOException { this.a(sectorOffset, data, dataLength); } // Paper - OBFHELPER
     private void a(int i, byte[] abyte, int j) throws IOException {
         this.b.seek((long) (i * 4096));
-        this.writeIntAndByte(j + 1, (byte)2); // Paper - Avoid 4 io write calls
+        this.writeIntAndByte(j + 1, (byte)PaperConfig.compressionMethod); // Paper - Avoid 4 io write calls // Paper - new compression support
         this.b.write(abyte, 0, j);
     }
 
@@ -487,18 +580,58 @@ public class RegionFile implements AutoCloseable {
 
     void writeOversizedData(int x, int z, NBTTagCompound oversizedData) throws IOException {
         File file = getOversizedFile(x, z);
-        try (DataOutputStream out = new DataOutputStream(new BufferedOutputStream(new DeflaterOutputStream(new java.io.FileOutputStream(file), new java.util.zip.Deflater(java.util.zip.Deflater.BEST_COMPRESSION), 32 * 1024), 32 * 1024))) {
-            NBTCompressedStreamTools.writeNBT(oversizedData, out);
+        // Paper start - new & optimized compression
+        if (PaperConfig.compressionMethod == 127) {
+            try (DataOutputStream out = new DataOutputStream(new BufferedOutputStream(new com.github.luben.zstd.ZstdOutputStream(new java.io.FileOutputStream(file), 19).setDict(zstdDictHighCompressor), 32 * 1024))) {
+                NBTCompressedStreamTools.writeNBT(oversizedData, out);
+            }
+        } else if (PaperConfig.compressionMethod == 126) {
+            try (DataOutputStream out = new DataOutputStream(new BufferedOutputStream(new net.jpountz.lz4.LZ4BlockOutputStream(new java.io.FileOutputStream(file), 32 * 1024, lz4Compressor), 32 * 1024))) {
+                NBTCompressedStreamTools.writeNBT(oversizedData, out);
+            }
+        } else if (PaperConfig.compressionMethod == 2) {
+            try (DataOutputStream out = new DataOutputStream(new BufferedOutputStream(new DeflaterOutputStream(new java.io.FileOutputStream(file), new java.util.zip.Deflater(java.util.zip.Deflater.BEST_COMPRESSION), 32 * 1024), 32 * 1024))) {
+                NBTCompressedStreamTools.writeNBT(oversizedData, out);
+            }
+        } else if (PaperConfig.compressionMethod == 0) {
+            try (DataOutputStream out = new DataOutputStream(new BufferedOutputStream(new java.io.FileOutputStream(file), 32 * 1024))) {
+                NBTCompressedStreamTools.writeNBT(oversizedData, out);
+            }
+        } else {
+            try (DataOutputStream out = new DataOutputStream(new BufferedOutputStream(new java.util.zip.GZIPOutputStream(new java.io.FileOutputStream(file), 32 * 1024), 32 * 1024))) {
+                NBTCompressedStreamTools.writeNBT(oversizedData, out);
+            }
         }
+        // Paper end
         this.setOversized(x, z, true);
 
     }
 
     synchronized NBTTagCompound getOversizedData(int x, int z) throws IOException {
         File file = getOversizedFile(x, z);
-        try (DataInputStream out = new DataInputStream(new BufferedInputStream(new InflaterInputStream(new java.io.FileInputStream(file))))) {
-            return NBTCompressedStreamTools.readNBT(out);
+        // Paper start - new & optimized compression
+        if (PaperConfig.compressionMethod == 127) {
+            try (DataInputStream out = new DataInputStream(new BufferedInputStream(new com.github.luben.zstd.ZstdInputStream(new java.io.FileInputStream(file)).setDict(zstdDictDecompressor), 32 * 1024))) {
+                return NBTCompressedStreamTools.readNBT(out);
+            }
+        } else if (PaperConfig.compressionMethod == 126) {
+            try (DataInputStream out = new DataInputStream(new BufferedInputStream(new net.jpountz.lz4.LZ4BlockInputStream(new java.io.FileInputStream(file), lz4Decompressor), 32 * 1024))) {
+                return NBTCompressedStreamTools.readNBT(out);
+            }
+        } else if (PaperConfig.compressionMethod == 2) {
+            try (DataInputStream out = new DataInputStream(new BufferedInputStream(new InflaterInputStream(new java.io.FileInputStream(file), new java.util.zip.Inflater(), 32 * 1024), 32 * 1024))) {
+                return NBTCompressedStreamTools.readNBT(out);
+            }
+        } else if (PaperConfig.compressionMethod == 0) {
+            try (DataInputStream out = new DataInputStream(new BufferedInputStream(new java.io.FileInputStream(file), 32 * 1024))) {
+                return NBTCompressedStreamTools.readNBT(out);
+            }
+        } else {
+            try (DataInputStream out = new DataInputStream(new BufferedInputStream(new GZIPInputStream(new java.io.FileInputStream(file), 32 * 1024), 32 * 1024))) {
+                return NBTCompressedStreamTools.readNBT(out);
+            }
         }
+        // Paper end
 
     }
 
@@ -509,6 +642,19 @@ public class RegionFile implements AutoCloseable {
             org.bukkit.Bukkit.getLogger().log(java.util.logging.Level.SEVERE, "Using Spigot Oversized Chunk save method. Warning this will result in extremely fragmented chunks, as well as making the entire region file unable to be to used in any other software but Forge or Spigot (not usable in Vanilla or CraftBukkit). Paper's method is highly recommended.");
             org.bukkit.Bukkit.getLogger().log(java.util.logging.Level.SEVERE, "====================================");
         }
+
+        // Paper start - new & optimized compression
+        byte[] zstdDict;
+        try {
+            zstdDict = toBytes(RegionFile.class.getClassLoader().getResourceAsStream("paper.zstd.dict"));
+        } catch (IOException ignored) { zstdDict = null; }
+        if (zstdDict == null) {
+            zstdDict = new byte[0];
+        }
+        zstdDictHighCompressor = new com.github.luben.zstd.ZstdDictCompress(zstdDict, 19);
+        zstdDictCompressor = new com.github.luben.zstd.ZstdDictCompress(zstdDict, PaperConfig.zstdUseHighCompression ? 19 : 1);
+        zstdDictDecompressor = new com.github.luben.zstd.ZstdDictDecompress(zstdDict);
+        // Paper end
     }
     public class ChunkTooLargeException extends RuntimeException {
         public ChunkTooLargeException(int x, int z, int sectors) {
@@ -552,21 +698,70 @@ public class RegionFile implements AutoCloseable {
     }
 
     private static final byte[] compressionBuffer = new byte[1024 * 64]; // 64k fits most standard chunks input size even, ideally 1 pass through zlib
-    private static final java.util.zip.Deflater deflater = new java.util.zip.Deflater();
     // since file IO is single threaded, no benefit to using per-region file buffers/synchronization, we can change that later if it becomes viable.
     private static DirectByteArrayOutputStream compressData(byte[] buf, int length) throws IOException {
-        synchronized (deflater) {
-            deflater.setInput(buf, 0, length);
-            deflater.finish();
-
+        // Paper start - new & optimized compression
+        if (PaperConfig.compressionMethod == 127) {
+            byte[] output = new byte[(int) com.github.luben.zstd.Zstd.compressBound(length)];
+            DirectByteArrayOutputStream out = new DirectByteArrayOutputStream(output.length);
+            long compressedBytes = com.github.luben.zstd.Zstd.compressFastDict(output, 0, buf, 0, length, zstdDictCompressor);
+            if (com.github.luben.zstd.Zstd.isError(compressedBytes)) {
+                throw new com.github.luben.zstd.ZstdException(compressedBytes);
+            }
+            out.write(output, 0, (int) compressedBytes);
+            out.close();
+            return out;
+        } else if (PaperConfig.compressionMethod == 126) {
+            DirectByteArrayOutputStream out = new DirectByteArrayOutputStream(length);
+            try (net.jpountz.lz4.LZ4BlockOutputStream compressStream = new net.jpountz.lz4.LZ4BlockOutputStream(out, 32 * 1024, lz4Compressor)) {
+                compressStream.write(buf, 0, length);
+            }
+            out.close();
+            return out;
+        } else if (PaperConfig.compressionMethod == 2) {
+            DirectByteArrayOutputStream out = new DirectByteArrayOutputStream(length);
+            synchronized (zlibDeflater) {
+                zlibDeflater.setInput(buf, 0, length);
+                zlibDeflater.finish();
+                while (!zlibDeflater.finished()) {
+                    out.write(compressionBuffer, 0, zlibDeflater.deflate(compressionBuffer));
+                }
+                out.close();
+                zlibDeflater.reset();
+            }
+            return out;
+        } else if (PaperConfig.compressionMethod == 0) {
+            DirectByteArrayOutputStream out = new DirectByteArrayOutputStream(length);
+            out.write(buf, 0, length);
+            out.close();
+            return out;
+        } else {
             DirectByteArrayOutputStream out = new DirectByteArrayOutputStream(length);
-            while (!deflater.finished()) {
-                out.write(compressionBuffer, 0, deflater.deflate(compressionBuffer));
+            try (java.util.zip.GZIPOutputStream compressedOut = new java.util.zip.GZIPOutputStream(out, 32 * 1024)) {
+                compressedOut.write(buf);
             }
             out.close();
-            deflater.reset();
             return out;
         }
+        // Paper end
+    }
+    // Paper end
+
+    // Paper start - new & optimized compression
+    private static byte[] toBytes(java.io.InputStream inStream) throws IOException {
+        if (inStream == null) {
+            return null;
+        }
+
+        DirectByteArrayOutputStream out = new DirectByteArrayOutputStream(inStream.available());
+        byte[] buffer = new byte[1024 * 64];
+
+        int bytesRead;
+        while ((bytesRead = inStream.read(buffer)) > 0) {
+            out.write(buffer, 0, bytesRead);
+        }
+        out.close();
+        return out.getBuffer();
     }
     // Paper end
 
diff --git a/src/main/resources/paper.zstd.dict b/src/main/resources/paper.zstd.dict
new file mode 100644
index 0000000000000000000000000000000000000000..061495d699087c0093a192c4bf4f3b3924f776ea
GIT binary patch
literal 112640
zcmeFa3v^V+nJ&5|HKql!>8%IIHi^|+f=GTvttPP{<5=BlfsnC50+EM(2U<b`#R8!R
z2>WERK$bx!92;bk0UzdEL(IxpzB9`nPu9&C&s>anB^JI;=G>XHW-P8>bDVqDAnZA_
z?(*E@vF`W%e^qy@^#B~7<g8gKP<{1R{q=u;)!w^%cUA4$cRg4Bk3V~_boI9al{5c+
zR{gBMc%kR#3wGUm@`L&p|JP&h{p*sSyx9BB+3)`CUwyD(r}GE@@fWwZUf8yJL&syG
z7fyb)WA2W>|5x9J$NuC@)h)T-DvNG<>hEsf{{4Y}J-6fK1>0&bXV&|2D^CAwR@HTP
zFS_Bn-6bLahWHm>&+<7dZ@6#v$~{9hMau`~`yx46@qMA)&W4=O>B0^9gU=uEIo&H?
z-cY?~Uog{2gbbv7`19k>W7yNn*jw<8PQiw6^z>3}_{I)mLqokmuV3VPWFoXQ3V1Co
zEs_9A&O)1kgsKQ;J2O|s+nT$(n`eP{mf!I`5Z~PFT)(+>OLJ3ayrp|dytNZPX?AWh
zyD7fCd0lGRoMc&7cl(y+M5REoU}Gn0wIxbY%(Zs5Z&}ygnXKiGtF@)Id(xr}t?iwu
zMJX1W+T(5GET)vjw`^$cO08FzWNY2h(%jYEykVWTBE!k}R+f|F%#OCTH$A+%JKo*g
z<v1CR>w3Aa28+c(m5VC`V~Y8)stOMou>?jv$oa8Y#Gso?xuH&LH<(00LxW@hwWPpm
zxJFa;U3V&enkSL)fqxuM;Ex$|1#2{szot$Sv6w{>8`c=bTy3rA84Ri)aK_~1N3|pt
zlMMR747OX5iurCVLc94WP|Qyt3s9~K78_#9?`iAYB(gflrO`kY(_`>RFpW@B<Up3J
z82XC}MDoWBuk|Az{l;<^ms3kiTv6nTpyY=QaahItu;jY2kU<3{<H1SDSx&|yxCA4>
zN5{tg^}jhtY()mKdu(j%J>ZV9vHyO9-^plo@{=cQd;H;bZOyo_x}ZT5RY02f=c!E0
zxuS_^!bG;?U)|i)-P*pTi=PlPc|D9xydEk8eL;T|k;eWg)66j0eknxsTht3ggZ@aw
z-zzReT_5~&ed1q#FrfbR28#N;Ks3-V?dT8sd!s?<#e$;8Dy$Rr_ZGQ*!9dLQN1$B<
z8+~Z1=Z}{6_eD@08HT0^ro^=Hdj6Pb$IvekW_y9`%%IQn_XX-<0j9ku2|TwpR@5K$
z?**^t?+yAQet(RXdILxY`U3r4#1Hl$?9fQGs2`MQSi~QQ6~ToV+5ujej`;iFb|8vE
z57~V%f;j32C6h(2KS~XBO>Z6?iS`8!Auj4WgyvBrfI=_O8`yf}-9R6Ve&DBJ@RlI%
z?K;vIb>9dad58UX1kKw?UwdH`)zNc-STD5Me<)|S23Q>g!6Kw%2mBG3f_9*{5A9{c
z=w(rVM9veo6o*Wzz=+GHM~i*ZQH7B}FWe4L8(oyw)%U^O?28ZXj?uqf_~&K6(RIWZ
zUHnGgkq_=({01}vv0c($aDj|^u_)PL1F>W<%_O`G^d0PvGRC3dc?@>f&umsi6WDWT
z2gs1bL68hn-Cr7!(<6XFbVJ|qF8IKT8V8<a8a^G-So}Nk0ZexoM?e|$*9fm9O*Z=_
zyLJ`)D`V`BA})ao_Bt!0-h#4P=p8R*#p9-86Vgl`G#OAqMpLe2=N^QA?;@G)rw{&U
z?m^LhlK#2y@`FGCX=;cOM6_-EgO|K67}wS#E~~8<{}98!`oEDXj90-kf6c1C<7Ktq
z4jepQcHg&82alKD$BI$o-@$`)`{2=j_!n~{`BBdeMq>F9d{+cZB9Z)DFW<{|@zvs$
zAUEO$Awe(Vxm1clH5MsB0#dXDAJ#At3?fEO5PvMr4aQ=5k^D$37LVk|dU}`_iS+aU
z@V^5_P!!AcJXqs*CiV0AJ>%iCA7A<`h~|1h&x`P@4BrQop-XapJ>*C75$FdpQ3ZOC
z@GTfaZaz#vV3q{%kH=1xanr{H_`MQ?%<#M~Nda;dS*W39gW_(3{SXi0FIo~?&Jv&m
ziz@YW8%+13XN?qiU#c%*!eG?!!-yyOvDi`;Beb-PM@r;J5PnT2<EllPwrEPa@ePl#
z%wS9rjjcy+bWm8M-k|B7s3=Rc)bLwOmRuoa{IFWeAB!n^C4x8%YpQTG$iE0j0f=hm
z-~esqYs3=huQ{QWEXMvk)rje3FvZBvvw{3T%U?x5QmdHsvPtq%vl>qPd6d>4B%*)_
zk%%}JGoT0tx(NqLVl5j0aEFNg51UhHnZcd}ikX-_!@5;W#1Ec0al7)L5dR-M@ssGS
z&#51Sz!Rol5`Ng4E#^!&SY<Auo&+k>1V2#!KN%Y%z=j0>PbTHRPrD&@pXIf<)bKCW
zGk%#N0*XeGw_Eto{`<*?aQ}!pAh-<8X1_O_z>m5$JP#TWsAjSH+k+Gl4B`fCE^opN
zGF@O~=1uiy>!g=oZT<9mR<`x&L;9c9nGWaroa>iw*%WWYPq7VaTJgKnge=FmV^uqT
zXE|S*<;<#SZr!-4dvkni7k-AVtg4PYux{y!l`HE}Tr%)PY@qJ;gZC|e?$7FO|KWWL
z-XB<A^27UX{Xu=a98zw7sAS;2+X`xr-~Pke1#bW8#)0Lx73@7z|9ox9fdBo*GT&`K
z*n6h&`O<^#c}ULA%AcdG1U63BJD+^--rIgqzj*%sniBW?#~*+9>$eyD{CNJ8%Zm5=
zvp#zCp4)zaDxqjmVCH-8eE83|9XS7fXDG0H&bgu2-u`gM@BPfz8S?j57X9d@|NM{J
zzgB#pGvw^N_m-#jyh#aUpM3A@Uwmq2)6woF-T}Df-1Eg7&Q%>a|ErQ*82|9&M{ih`
zwd>^jolE>p@BHe+?MuEuse4Juz%MAxe{v?IuPw-(`QATvFP?wH%&cA8e-906`o-IK
zi*)jR*n#wq-8s&U_pe;DeB}e{qAONb-M9RKW$PYTxo$;uWNr0o_Ft|aZWs1Pf41Sz
z>PiP{OVA5}zS@Pk$LdO@-8Z5U3kH4`D;lUNKG6SMbZ2E*?h_>gk!8hh|8o_tuk_&F
zSZ}20$pijaW(N8%+t<5z{*%i*UncvnWT10#;l64w(El-|+-zTde+>74Ssy`Smuvrh
z^zkRf2hN`cHTv&8NZ-4+|8$hpMJg2^@Uo@<&atf6t=Ry$<tgZX?_O{J`B<i-(#M~G
zDvJhKM%|eTw<rYnOD1ZvEVzH>dr3P%9LSG8wsutd<a;^JoV5P?jh=OIFZHbB8JXH^
z$+J$|XU{s75@((1HJ){eUX!!VwpPx%lwR{UX+No*l7ZA-<5`!q!?P~gYdq_yo8w&n
zjg|E)V(V5n)Gv)xRhvFL_AOkZxKatcQUOz3sW=%1YR6rvMdPp30du8BaspAGFA(t;
zMSKDN@qbLguiy);LZ;+tM!qjlonII6xvL_DkqqSVk9j_~Iv;uQRZ9!wyO6h=`E|(0
zUjTUllrhiblNbNf@{z}Uw|agY)#{c)sJ{JZb^gGN{QSE6^Ix8kUspcl3smKlM`Aev
z_}`o3E04neoO1Z@W(5LO_@iMzip3P5@^qlQ%9j&(jd`fb{K%?EP9)0*ffD@B3Bmu@
z@GGe*r;>`hke>r5#DBCkP~}_C{M|lxcYa;9FW*JA*L-M~FSN@S-yOl9ue>T}J~BGc
zWK^wNHoxN>pgRAZYWQEB{}BZ1|7oG=&B-Z`lBpck%7@@*R-pVfW~l!;k#gk2{~_Z)
z^wI1{P6&UM(0^?RZOCEs%B$f|ppu<KKSc|i<b_3(@9wUGpW;6n6hL3nKAOGzG@Azh
z^S8=j>p-=->dLz6x>8Ar9j4$(`4F5qol`zEf9q@Trz(e>a6$bS`XTr)jznOb`Nn_h
z!?UWK5S*-po!4j!rjQTC*JwxmXB*hA{17t0$^4-lclS_E#Fvj$eqbnv|FwT2KK3;|
z%ddNFKK)d$>#EPxjPrj@$2lnCKmQsc%jVDT7|LM=T9e3U-u$g}g!w+3|JwYm%pZbV
z3H{g3&EFak{f;4D2zEpnC&4-VAs_b1l$sC!kzw=E-H;+ab~jTvYl>3+XFmTMsG}|Z
z=ie%vVb)G+KJ$Ll`E-(;)=%}iu6jEE^Xsn3&oh&>>kRrqc*nQ5uKFC#f{FSsO~~K&
zH#{2ZXNlwV;^UTo_STCt3+aEhY%&~I|H`*$;Vayt&DrzbKk?S!+z{@Q9=+!lm2P=T
zr8(zVhHvB{md!c$ekP?oL+|`br3{DCFMjpUkFpH9Usvg#TSS5`%c!e%_9X4xqcv0Q
zypyo==<k6e;m?lWqdy-TJC8y-H}vs$Q4_xJtSrJ^$vYoX8v5v89KGZF_`8ta`4{-k
z`#<Uqz4P%W(8VnV?iHa+DY(BT>l2ZN-q~4+n-gEg$1J0+-ne}7-7DRq;Z{cbPrr>5
z{b#?FP5+rMW$i!S{qW13eFTu2D((EbO7|xEZ%R8~*P4^t`EJ4vy+ae9O4^}x&fX-L
z{<Aj;+JDrgTiSnGlTK>?>Fq_L|IAH`?LT|dV)}22TeRQxn)cJwy*BX{P5R7-E7hE7
zS^t#b+Zjn5+4Hyuhonb#zu$)|l~)Fj?EabWXJ$Jp;mDr%LF$WIJHE^e|IVnjv)}Kc
zEMW&VcP7p>TFvn3dH2cpAmJxN@=QZn>X~+)QjziJsq<OsXPS>!Do&~;J(#rX#Eb?f
zNA3h-a^&On>60U$qF@K6U{}iINXl$xYV873d&5+<Yp1Jy{gt?v|5~-D_5AiLaZg*@
z_F8<Zc28T|HQY^~sdl-k-T0Ym=b7459<gaXUu0^xO~qX~-4UB>YBx_+``+nl=U<6?
z*>tsYOzkPp^JzWLHMJl9OrBq{_O#qrZ1=QB%+{Xrcu#wUUa{Avy+W^8yXNYS7&?7+
zEZ!Yo+uYfOiC5go{nWwa>nvx+ie{{z@H^LW9m2LQC(za1xvi;tTW2#?E5tjyF$3&-
zR0qz!>vLwUh<9~2Y~6rQKYZ{ZL>p&2*F{^~H*>D$gS%zM#!iGC;UrAp$Orz#r%;&f
z#{?2`Dvy^T4jeCA{6=QrPj1bAW9$CoW&Q^`Wy*$gN0|Y{sCc}LGfyakJ;s6Ke{w71
zC;XVh`;)y$GR-p8!$cnS`U1y~m%)z(EaU7@G?0H>=8J+6<{*g)I>ZIXeTega67(-V
zD;n;>zbvbL2$M*dZ9=^Gjr9lr68;^8J^up-Un{Gvi3ax5Gcl6j-6Z~f=b<0MzuIr3
zqQCa{fB2Vlb^r0Q(7vVxWg6GkGhJK1ANKC6Ke(VQ8`??#;1m1{(lf+J792;sbP;@K
zT!J$7?+NkmIW%nj!P6msRQ!w5KQ=Gv-{UF$_jm~!)^{d^hM{8Z?;ku93hlH0mC(Nu
zc&71z8IQ9Af@RbWvj2kFa4P6us<9vQUjC*2Sm{~#7hCjPA13PZ50n(aztd0DG#>1a
zl+_}Ja$^a5J8&FvRSC-2C4EKgKYH00lo%1+MwLE^5A_uxeW)+g8+f|#Y-r#5zFx#l
zK9BzSN^0v56!rxX`xk~*4D<yv=pQ>R#XqJokLr^c=Mv_m$r}{*p#Ln=ZsA$-9(qlD
zqL<Lncyj+x*4G!UVO&%j%`5CHj|TGKUoTEO_=mWb?SPj>hZtju7E_mu)BHP&3480`
zS$c`%8!KXu&_B$L7ScbMhJO+V_7__JmX=d5uN)l;E}b|n@h>HBAtLn;yex!9;E?En
z4jI-z>Up#3yN<l$*Ep&Z`?>yw(8~>wSK>e)e1K<mA~u>QR^b!$QvK^I3@T%7y?EBN
zpX^PAW@5Ltp6=jW0x!=$_6uXo$x7VkF-@N|KKPvI!9VCBw%40!??O3Wq{<=qN}n_~
zdI|q(*nh9lGx%3eJzRT;qj@qDoj1Y1=fq3+l<?1dZU`A{kPKxwpH;)^jbHJWXP35p
zIA_j>`YAc~;T$H$<~V}Rn4<+BemKT_2qGiW@;Q?2%z*`#BM2s{e@J`yuWF_?N|nZ{
ze>i5!KQ#6%I%9@@3?3oC4MAs)LCZU4culsW2B9tW=gdjA3(Oym;U8+wf%!2hLPYbZ
zrjEcN@mrC+>M-i5ABI0sZv8j)$4rCA#4cFi2wM&N(4c@E)Il*a=n>4)bOKSxE*E>E
zAl^wHGGPfaB6UaWNdv?^wI?+wgHc!%Nlclh)gi4T+$lDc3mH&iwkQ*|E{vGk@Itc0
zU9?!WjeR=Hs%Wq=K{lzt1iQr0C(aSAZ`&kYMOIj#4W*LU&?fm!S<)ZXU~L5Du|0;&
zw2<JHd~@p9Q;3#$jtL?ysOCQ}ex8EtJR;qtr(n=)g_LXnGUQYheo>T5Mm%CoB-jr1
zPepAPDj<LIfWB4Rq%)PEt*yjWg8%dbSyZ4Mi=soLhBtvwP(F)^(`%v&Z;oCZy#d*m
zMlX#rG0Grl<cr99+j)DGDmOR)q!n2}Ie~AZDrJi(5E&X5nLk-LIdWly`EQN9HNwQm
zh*?pDJ0yO8;0v@#;=Z7Mj%V-V2Q0qp@deNLHGej~SNY+qF~0!t4Ty}hA<6FBk2IE|
z@e2U=8)rk*TN>I=z0f|C;g*5b`|^+KSA@j4x#3D7#78BLC-iiM(xJ1sse)(tYS$S4
z!B^bDrula^;a{G*W4`eGQS}mEw8Cz`pq7?PJK#IAr3F#(68@#?(KD`Rs?QHHmUgTX
zODX=L|0ek7U!h*I|FWh3wAIl7zwBA2vHt<4XCW6>SLGe~hf;py{X=OquqI!Za;ZCI
z@~sXRo*mx~IUZaqRto<R%NH`@K;IFGkMnr&ySYp561tB3ipTfJuc-Gp%JK?lPy<Fa
zj^<ncK9CG9>+1_f1CPN!#vhc;!aBhZcvD~WK`F~-h+f$$rpsz^BMFD|aVu!-+4H4T
z+EMC{KG3C}{n0qy2fFCP16_aQ4;G$9jPok*XsSk`*qar|f6VmXc>nt5)4#s?#<Rsq
z|1#7O@ek`Cr||D_-nL4Qz=v#B`6J$KC;CPFD}1Btcp3fURdbfVE})@tvG`Ytm38!w
zcWUqt@%a9Oe}44eeCfHOWkP@zp`_srE8@N)9z(A5G})&A#6Ook674!F{wZ(J=)J-I
zD?HnMysWrTJ;S2E6#q&|^Eg-jk%s<(EX6-u9}8v$cFljs?_cHm=@}Nk(uD=%{R{N-
ztO@jEg{eAh{5v`e_VR<X;oqX*ES4STuP!zzlkw6;xjy)J@c6Ak_;CEzXeQ!Xmf_6K
zq-Tha!oMF#9Ym-pNyH17?EA6(e34&_*1sP|SokIOAA5(NJ<Nz$|MJBME-_qQeZd@-
z8UF?~E&d@_7rc8|7>G67vi=WCydfdDSciy(@L10tWI5zqFBb_c77U^UH4%v-MJliq
zNvWS3#3Dz@4+1nHTAF4}EUssS0EsC4B8xd$p2)`tq*(lbaqtU)ELuc;@Tea!Ck7}B
zi6EGTTwNnA{^O6n(hli_$Y7A|r{`SrFS=|egCMGLv7`ibLtJ99@B+|ZP%`=~06#e;
zK|KjH;-ZtZ{S>5GlEKQ%U`--p)W&f@26)t(w3`}`MN{-xQ8Lv}s#0XI2v&q#7$gzf
zEftde4+WHvmnO-}p#6X}GFefpBPqO45M;+uTl*;(<axl#h_zdo#(xOX5N$ssZNHod
zC_<3_hZ*wH10X8_ktv4{x$J59hiV3q1wB2yw8D0xm;t2L8Pl`uIJTdK%1>I_M~-IG
zF?veJNU!Z@1$!PKUmRgK3K97kwB1sLBD6H0f-16Q<M>G>=K)l}OMO?*J8FuoJt+>-
zkhGVbD-|H3Tn{k$sYdT;Ncfpy|B}a_rIr^7DBwTZLrwG$A~_BsqX1n>3gpAEluL>-
zYKmEw7&|sYWKltNsqAEWUJ-B5m<xa?8G^{5$c!WwF=^zfF;gp8J*k8&i&~0!{I6!8
z{nZRlaF<EHa9cVNUmVVnvS&}s7IX&r42cQb`J@}dp63-0y`uQ+>xwVFrFc?qOdaP<
zgKsIGl>1a>tE~5}yn_|_MWW^1Pu{8-&d$TxPWhVa9H-y!R5tHX``ZsGT0iz1Kb{vq
z*3W!pnC093uM^krd0ueU_7{gG-#KaU_3`*DW#J8G32&gn=WOlY;S|A-^*uA;$9BhQ
zxh~<y8ubHiNq?-`uKfY=gzz7FWgIp?dqQOA#WZ}y$byGaHBbRw^mVWbyc;2|aaOgg
zg&)mMWka?45nJR`u|F`^GSQDg@~@xyyd1mrJD-1+GTJ8j&a(#Xv3=GY<7ZJk@v%9a
z?7WJ3o#31&=7srrk&E@j%)|O(!Jt<hmdiBPs}OX(FstGU37bc%zQX6@Lar;%$04tv
z4ssY73|1*@5_u-!dA1}kB#P7&mtw-ln&flcJmF12>w1M0lNSzz3B&?G9c%03dX^<@
z9I|NrfMSR&tdT(RV*)>}K5F0tM#_Owp#ZCf(SGuhpHS!K3PRafMQcOUPGEvRPmJJM
zg}hK4Nnp4|vMjn4(%+yX$_If(8bnyIn!bXUxBwUqR}fc+$wy<khL=Y<B(+?_%TfkB
zwBc^RAF&004D<ula~C38cp;}^5Jo5m!{pB;J<zl072}@`be{pOQ6#}MA%rsU=bNJ=
z{Bw;TL6p&m<;S4|FHcC}FDCLK$XwnO;VVJUE94*pE=z842;axZK?8H~wHRb~;H=kf
zficrP09KOoo9ehgC;|DTBr|x?KnLdn{_vFp*Ju#`_%(=9eBHoq(5+*AFx4sGtC)63
zz`GS3{W$vwz;2JD@$q2p+;|=mxxu+XTpYnh6yVM@xUs|Sgeh|KTW%h#gF>!eD8LK)
zAZ4KA_aeUe3cyc7oEGRiej)RQgx)V~M8ccfGPeca$Srf@bK|ZT=R=iqy@hdiF8JBs
za0PzEdr->_-qq2AnlMpX*y|Oek=`zxSs}WhruB;(&Eahco8>L2hbKfiaySo=D<<en
zuD6hco`4ISI~UJ%#=V7eT_hTr9Y^(Gu%*Wxfc{-Q9c5yzzrWwRb<pzw#8P<z8?uC3
z4UU5^_4J5r(G)HO3j^Ii3WS1)7pllY6nkX@lITqG50baPB$~os+DoNdVNH}_#lu4p
zoiGX7o*syTEQE;o&%A|*qxeIOdf;FSE?{XBt|x;F3_|PH!P`#(q}|FdWw!mw&&GU*
zTErg<f6E{c{EdRF!+g(sW$+mEqPL+9!cUx@A9^N$Ujpm&mWZK+jkglX%R=DbAlli|
zvYCi}7%{wm2L$~cf2TI?7%{fgB4SvPV9|(40MT=l289?6vUm)cEiJ|m@QO%YW-EH&
z`&;A#M+lw)#S-L8u0*$+r1pC<AA}-U;z0yv0FD9f(9%0bD3IWnNsN&fvY^QpQ2v<V
z#}i-hnfyFegdfNtpLV08@8TQTyAxxJ%(LiuDkDqsJ#R)!ysfL*@670G-`2g!@nOcA
z(w6p4NVd?|gJ<p&Qs%a;R?oMgy=RLlNbDQ%#pJ`!jh!f8w|QIFrq1^E&FdQZkiIh$
z&n!Ru$O=9+!u=Fpc>b9kxNW=i>MJiiap;w|KD}`A)mae7E{<Gy;V|UOqZeO&X4adZ
zj*VTuFxz<xICk+>#mm<Zi+p)x<kHyKDE^OrI(8X<45K5+NWqcOPe(t!{OQ<RmoS(M
z9DeH(YmI^b3B&)4;h$~zUmbjXg!~s?m@WJla}4i=$@s}-xXDX@Bp9^fCAi4^kxTFg
zcw+DwwEOi-!zW%4{*jZf3jgTHg;!sB3oe8I#9OE}cKPD4Gr}sDM+{zs5!xD+>@<EB
zOcJC5@~yAKC!To%cg>eZhF^H*d9-)*%~xlG7YY}KaTpLTjtmRUWpt^w0;iQ&wtbyw
ztK?o~Wcq6ObspxC(UG@aedd+7E{%;|x-k3oOR)dxMLoLU*XCU|tXFCOD%FOEU%=rW
z9UB?J;YK@0M=#8lvuf-&#*ecc=femNH}E&ke-b|zFc~60%z*Mkk&`247A1*^iI=PF
z*{f3<J}D;|`1Q>EA99eVab?7OPFz$s#>_}Ao^{tDOtbeua^|F|@Km6$m?M^bO&EjR
z$JoUj0VX2$F~dwmG)eU)SyIp>OA3Nmpy0y-3;sb*V>?n>#K+k2C_48tz*G*%HRedJ
zjzX(D!YfJRpB*W+BlW2xukaEhuM+FHDl3A6*~J>GJ@pTh0w|*oEYsNf$0b4Z56dgk
z{4@3pZ>jVjCm8yIrK~cYf8v6=b2WPO68&;Y8OQS$o@HU-S@JT5J?X_nd#~NU+=JrZ
z!J}9nM0+cQ5i6>geekFh9+&<@OkT#O9od=eXDrl0|4EGP2(+TrlUV?knd}ctb@U$w
z!PD&_!|1Ucx%4TD<rCCnoZ_D>&)^_Ejj#;7>Yv1>8*rHEn!gf}#Lz=Jg;&xnBX2C|
zhkuA8;6(}bG)^41I_lNd_eW&W$5Hi<N9^EnJ!0m#sekYtX5eMvDL=eqS)b}5TRgia
z|N1%#;U64`7DeIZWd8Bm^4HdJbrYuOjuxI`|B)B5oG%(j)A~=&E79m%faOF!oPTd3
zM*r<(|It<HzgYqH->l5Ud0^X7$>!Y9v7oHa-`6q!-C*Vll%UFf#`-Bh&#+{PF)nuI
zV&{reJj&wVkH-0@=U?u@AE{pId4G4(KiGhOVkwAou`hU2!2c{_B+&#C*z@l=1sn)2
zB|I?y9URZNe;HM*Cqd_ljT};P4(-6$9Ks$EGgob=81OJsg%B*p2pWg87I|3|vnq?3
z?Ko?hjj(Zsz>5;w$mpzEq!}Bl1^4e*EBJyC?|<bPA>Q-6h!}dKhygP3BN$#oKfo(~
z1gomUYf!nuw-&2|5q2hQs`Jl3F;i@7WO&yrucN$|o)w}OaYKS7=gzaQzaVuE!4HTS
zV-yi1aTF`y2P_7w)Q^fa>PJ;`byym{b**yjH0`&YsQi_Hlh>n@fNy>}XD561%}*U6
zI(g~B3)ztA2M1%}2Sq2v52~vl0r~-nez2kR1AtI1-H<pALV;`@$XtZlujD|fa{bKL
zFKPQvn)W-U{mw~kzhjQWP8<jJ*VaQj*ftD_ZmceLiYnwdI29g7P#KCV1e`^gipGzv
zdT24eih<qAVtD=hY-g4Ffn&v1<UF%uEyrKMyU~F)@UC?#9LtM-mp)Zqj*zbP<;n>m
z#4biq8FDeQi%?nYiUX?_K?k8({m78Br92m2TR+gEwTooj7wzNt>x;tcbELh&EVkFD
z=iQ8A4%BX6TMnB+9BLXyhMwsd$z{k02rpFlbQk;(aMqaq5HE`|FtCe4C~>@bJ^GO{
z+lO+ThSj)`aNR);c<a&6S;|YI6ka{Uf>nB?F`}$N2tgr%t};{^Kg7!bPZVStKiEf<
zc|1{$%MiSoxZWW<?yBu;={tEzg!WoqluCv<(m@eT1PTe(j|$_5_0sskac}7(%4^{V
z%5gfta?k-UD^)gE(|7U;QP4CcU`+;1Q!S-oR<M~?33er<`oTV;EIdJ;4$QzQBYjrB
zM%+LL6whsPgNxj+#^X(Sxgl;M7RSh6ER+`xhk7~?=egmYj>j;H7!J?t$qR=to_AMA
zS2z?7h1`ywPzXbj;ZO%el+Ejake8R|qGAXc^LoNaV63tOdN9y~;nutm49?37K@AL{
zxyYu<T<}X_JP)cg7Yg@u<w=>_@fgg7LU;A-LM}p=2fJY;gFu)GW2At=&4tLi7_bFn
zXkHJ!IuO3ABOE?__~~#@PY8I^k9#1yNB{U}&pc2qLB$@p4Rd*S<<T0_Uu|h=VlGB@
zXc*W;s8FzcQ=*K}vI2PzKYdp?ycqb0Jw1XLp#na0h#1B=3Wlgumy8lHf<>kl!%rlC
zOOv{j^h(vgD$XHoQL`D7_h}&Da8FMcMT^gnf5~BvSiwOFcMTCvocQ0BA(dD74YB1P
z*3JoA{Hl@R_>a_}_B+zT+a>OpZW#EIG@H%u66F&oPP`2MuK`b(Zb!RWL_Y*KY5%uu
zk_ri4tNm3B!?A=YiIydUgX+m3jskmk$>9NX0}-Q5K!m##$@?-y(w|^{GTi-`Htg=l
z!i$+}`G|)hquq-Y2L~+*FZsn09%gCo5_`0l+$Az<TQszj@I#4a8RTFRO~zu$XoCDS
za$A->uL?`hUdTAT4nLzf_=nQW1i$qI{9U5KmLu^PJK$xLlZ2`Gm6!fJEz0VToOdEG
zIs8X|&BT)DM@A$uXfSLsJi>DDYUl^NY|@j!VwNK;KFn)=32?yR(<z9g@u&Z=()KSN
zQJ#AYf*)E4_x!cM-4chxcZcP(6uS{tZ|QFBZf%y`2s1LAoaI}#Z)@Aq+!=3d<8xL%
zyN^tkbHgf(F~-}f+S}V?6cH9O9Dl5{ee3e>=FJ&1oSdccwzgO+9-Z0J#4kw{=hSTL
z?6wrxkM;U*w0E{`XlPg-yT84wJ7een`^ESEQ>5DOWVUW_<|T(AF~-@}x@Dt|KV~`Z
z>aDFC+q>`VZf$zFYenn!<_)wy!?}TkWQc5T-?pW@5}Db~b@#V(dqv(;@mp`wfCqwX
z)%)YTDJ=Cl+4O2fGoJDJkN^1(|6)<rp_j9q+~~H4A8zfwbDKQ%BToxKIn$5t*7(-u
z&O29cjrVM+M;$y>G&5GcG}5qQO{S9-Y3<Co9euNM%d$>5#%HIpW7v;pi#~otFa7oH
zc;*Ox&Y(f-Bp&@v?u%*{1x(!V)#vza7v9_Q!6*Os$@_}3oh&@4B#l1VSt#}@BfFOU
zDN-ko^opG6_?EVIHjj<@oEs8{K^lDg!nUkGy{YX|wv(gnTG`pUu~oZpDr-2n*{wJj
z7!+Q)B_rF(UensvyoLuz$kO(?yl#qpF0t?HZ#e{W^Kvnjhq<=o6eFg!I9Vn$W|-rW
ziL->8kT@MF0d){m!ZaL<v{Wp@C^DHvu|#xfSqgFg!9q+?hC-OR!<TvpRZ#^Yh(#`N
zh=1Z4XZAP+h$5{^7R;m3Hs;Y_lcq?9I!ws?B7sJ@+aJx)E|gt2QV{g&u!|n1_%W}5
zI|$IbK#+ha#Mw`(K^Y=V>f|0PV~&ptaF~z($Pryi_`^S%08lA6Ul%|HV^R2z?FQi&
zD@NRCffrnWt-5m2BB+MHO8dd$yt$nDKxm=89;h;WNn%9o1hL2&$1o>D(f+W}qUYp9
zO*qz|u6XryMCv1>B*q%K*dh(4;3D=Q3>E^tVx8XOR%{5!ut+hnEuRPzBD-1Ngo0|5
zW6>(qAkl|EU=6V!ghcUDHiTnJMaeT!33L*^#Y&(e!D7_NF^f?xkEQU}^dpbF2K$Nq
z*n^JfMM(=GJ;Z7>2kuHC?J_~6N8>T-Z7>-Iqc#0~*o%$38VWB;$MM%d6n+||Wiie)
z=7JewoD>%9iz-gXAG7>Xbps9T@9(Q_ShEx~aD+kn9VonXNBPB3@C&B$_LH|HhU!QF
zX#?dFETSH_IEHK7=9me{*zQ>P`@v5?`eW7Th)sPgj4j<DfT+eK#4yr=#(#jg3-eaZ
zR!d++QlKTB?6S-R!~{Qi(M&PCbVDCXs|<fQ41u!2m_^N=KGtS(n@@yv{*d7ZZ=aZ9
zJ1ku|yh!q@OoqjT!W#91`}o0hf$kmY7N}_YH<IXQaR4nAo2LI4nf_NEiOH|LxC@dT
zixc=)PtPw`6^=9gvd0@JHj^lBNiO!36lXyzO7O#ASd^NKKZ*8FdK~mXgHU+UKIs?m
zNjF6j-DCYo^24!le&BGcQg{)SmTm}(A2=r$u?<VLFvdGLgn$#^&v}HPjzwVXPDR;@
zj6d*Yj0gh_9N$XF_~BhGdR8CxMNZgL`<gc{wgUrpfI{!&xaN-`Xhy6mWaJD(B+WCK
zjiDe}1Bsy^k!6TN^%?6>fh5dOf~3bq)AJTh&WoWS;l;q3jQ6GZA;zcn!_b+2hJ(|$
zSJqm>q-me!#n7PeVxU#l6sGtg{OFG<{IEBk6L>MUgMb4nh><hFO6}KlUdQlapjFnT
zru$*5TXPfo14Lrq78pf{!VCX7QYs^-f;trH*fpJ&S4T!=q*VOCNTKuxs<VG+PL31I
zr<@-X7gge>L~ra;5JM@rN5aj5K`ZkUg!%HxBIUS(qWGTR2M7=wDaTwQwk+miDPXn1
z2EmfpT)`mLXwi^|m0E~{prd*^7Mpw^@1Nk0@)z@yO=R!_J@R(~$xpc?fz?Ll3NnOP
zfg<>6(AzbaaysuMvhZUJO6&*0FZIAHtNij}v6}{9D9Ml8P=pfn12LH3wfqIjFAXFe
zI{;W99bsfWF7Pv1jum_=#}u(iwa7pa;X^t?47va!#JX`vOG$%bn7jpC{wc`g1V6Ye
z)RWWC@yyty=Nj473@?FN;3{O8?2IB+H?^F!Qj={e;g=D$GhI{J0ZK9>-~^dSLD7MX
zmLT7?C?afFzuh8Qq=JH?(E^dk8H$-`F=e)#NI(dpwuA(d41p|yro2cnScIw$`j3#|
z>ZiZ*I3Y#LTY=h8%Hjb4Rw!l(f4E#<{~*VKENHNTYyAjVUX#z4hhTT}auU0q5NEg|
z!BJ+iBEj-o9Ph^rA;xd?5bfghG0jZyT7HAM<?2Un5%^8J!7s$7-_!WBph!O~vg0XN
zD6R^@4rKuN%hUK!!~&>f2w?6)u{;EnM;oA_{hldycqnO)ih{}`N0_qp!y@f5pIFRM
zBizWy`If|psK`4wJj*Yr{qAV<olJZ6C}tY(aE;Qwg99#T{Fz~p?UQ_<9!>HiXB>Y3
zGP2oH#6<B|54ho-g1^G}QGtWYfHP0g^b@R!oPx@atAW=c@^gcVu3KdI6_wsG{8<Jo
z#<$=0LlV`GOydU{BK#>R8Q>KUf#Ny+U{3?BA5zb8bgVCdt5wblTU39tOh06rez2Ir
zo9+ksb9Pq+_n+^J_G6!snwaNS1rPZ9FgIQl@RxXQ&hE+fuEkc!p6l<cs^J#Ky^$hR
zgH*I%rTsN3)s(PoKYk&zjJhhhewBQ^0hGD^-PTS}CA9+=`dLO@aR|C_RjRNIx;YAb
zbqA&0Rbmd#Z>YGD%?i*h>Z;TqqqP70h6-zkEvK%rvs)w>Gv;82CA6cxq*8zEN_~d$
z!5j{!B?eB}@o8hVK8(LbHa4%o0!<8uVlSg;XS{XGEXTjOc{5((#J4JCIdeET8hwOg
zxEPh)yjAVYigb5(wl;3VtCx6xH1j&g7mar{V;3n2cHGh3*o<-D)}}i*$9L2;$J?;J
z)M%<6*MjPMtZufN4{w1xjq#?3>+wD)GY)L(-22zza3w0*It8}Q=JxH)7#i(fy|oz)
znS$YZs~zt|>!#A0J5Fm&`?ignwlsHjS@lYDJz}u({`L*6Ev?uOiXD)VGM?%U&UAkN
zwOA;1Jow1m*c<a#9sBWh&UHG_{C_<E4=cO;!_Q$@cO`~_WgM4wY}<0{@kXrn%|%@t
z9xiHZ--5lRY+0W5v8BDOt-S}D8=I|zupz<f&a=Al?rwDIeYSTwus&{_KEs*C@$98-
zk6_fCqs>d(JDZv};QXMyNr&!dIDtrGS9|AH4nk|Qs5{9hewK6H@+~WHlvtjLk?iJp
z_a>bd$Z}@Y#~ZQV{F+C$ve-A(2!A$CMf3?L3#vA8dY}v6sZQoSf13aA_?O}2t>Wff
zcu^S2>YF>ZVW4^g`jhhlDdXRml>pgP69QRImTB?T&H~K2AMZ%3ig$LlcPECfQ;+-;
zUmp$KSN`;$&Ty{NE1<HH-8sdy0FJ_n<`%wO>bDR$z&-;X5}2jw>R#2^jxO%P$sj*`
z(AA%7z%<2byHgsjAa0+A&C>AMb3aaXUdwvmW-fnVZDhsr7(Sh5t!!$JZ&_Ert#!+U
zvYBgJ+uGtAv5K8XJEhXh`{OcWGNE8jbQ?b5HmqCIiK&-uofB(jukOL8-MX4>lXwEp
z+qZ1ogh{Lkc5jF^cQto*uUqv<XMA((B;~c+wrp%`p0Yf9^`_RXJ)O->4^J>1Sf!2Z
zT(@#t_f{OD2^!h=;~jxroA8dn2}LuOZ)|ICPs?Vn);G5_ck+_Ks~i%Y&qJM)+T)sG
zyV*#lZ&ga~P|Z#DqRKqzrt35#t-nm>_)fB>Y|p4Xp*xIPq7PKohBM9Yzu7BV@xg#M
zTVRrjpWB&PPU<V&{-2*i#$;Z`M%fndhU9c&TYP&QW!$e+_7p_b`M8XysXRAXxdorn
zoQs^q$QSrwaCKV?`dYTNwPhu?6LcrpPVn}>H`@v78xi3wZ_KiOjlcgH>eGh-{NCr%
z2!OYz)ARVImVP|_BDlvZ<@1I8{g3oNhI{e;{wHL_|C<=E=E%Rr`cjo)=?P>b96n6D
zNh~w6MXyW<Jw>D`FEG;zUO)U`=<hu|p!`7PKg8$HNKXe!4N3;`J?~II%ago6Y*jxN
zwkltlHk5qhGlXBN(ke}OrM={bD1Ly0?H^$2-NM`JRakyxYNfJXgNF}^k%dWq+abz}
z9+wRGVI5Hgw#xdUZuE1mjE%-)YGvYG1<*9q@Jg|$n|xyh)_a*ffi95|Q~r{eIYQ(Y
zLkYy=YRo`39+SKM6#RgE`>=X>`|v5zzWuz`0`lzfJm4Pk9yw1Lbf-LEqPZ#j(r)mJ
zofbT3RVIUTDToqzC=0y9!w>{diT<$Vmje1VG9vuIzoo|T1wL{H-c$1ES@QS`t=M2x
z5=BI(Dgd$N(iy-3($O=TS3H$KWF!9+0ld@{H2lJgjC122d4tLw`Xrp^{ZeYAMBpa}
z!J_gHc%(`9gEb8;_@Tfse2UMqfw$)mr2Ssc9~eH%o9>T!U=DQ*FAvgT3{=X&0v`6z
zS5e3`3uL%mo9lU}M7)|PjX(KBp!UNZzXU(tD+N=a?^GNpAu?dHH%g3Ru#|{dx2T|I
zOY-WX)CUB4G*rF=pgTYCH#(nhPX>-^AYeL1p+OLXxDm~bU>p?BZ%14VL*f@dsuK~I
z&rqOG>~mJAPBQe#c@A7!S+WxqEx%H(!Hf{f8yfU|wRrp-(%cQz24mGK(;MW+Q+XvT
z8Kv|07*BiZRL6*k_V=-oc-kEZ-y2rL_S`u5$Ds_rCV0tz#ZXYEDm~~d28))zPI6sW
zrbQbX@_?9WY*@W3U-|I>_uM!##1HUWPK#Q-&{(ku(RznRu_btlb;b`<Apzu%KmzjM
zxw}{b)bO~$elA%>NT8^>h5d?d3W7h^E!^eKJ$wKa=DIfux+zFQlm&K~Q_mQ3>quSL
zpFoV4yY5YYti?AC5)Z2k!-f6*5EJOpj~nsH;uh{Ud@X61^aIskD-q;OyJ=9*SBrc9
zc$b{NgTi|w)^UO#1mh5f2I=47!$JCqVi>jUz6SmX+DU#~0tP`S{v1C13jI8M_%EJ0
zD*VV7e1`tuvt*Dmcn4AJqFol{^3;AtKFSbGzbDWfYD^|eF<x31aS#6o`VqPD@LvF9
zgJ8hAotvINeE1pakWld%_2U5eg02hR<8?q6s8-FzkJGr0*>Y_bFoj?~08j?u@Bz8h
zaY)xxuK_<W7OOo9#Ov|~K@1(N`;<dQQTVamQxN?{g9tZ?F@BB+KWqyE>R2oy_>o^H
z`~?lJej-jfPAH>myQ|LkMP&%ijLYrU;ko_iB@=^g98WvomvK26f=i6c>F}J6%R$MQ
zv*UY{+F=!#yDB>z9Hg%La{%uT#%LdE=IrK3B*#S6j!MCR87{=Qqzo&@#2*Y6szf_7
z5}B~0(iC<;cBOGb+<N2Z(6y}7o9cbkI;zYg_*)8j;0<Bv95xFHalk#oJx#D|4JSKf
ztW|?x{~)7;E8>U@NK%xgeAHr&RFNWxvUZP}EW_tC3Z;tFXM`sNOu)i_RnT>CSi&aC
zS_L(+6b-A&h_HbaYU7Vvc46_EEV09KJLX_98hv02imU_$s=*Wr@DJ*2Fe>M|m~akx
z!TQEx7k94(b(jhhUAY}07Y*<q0#XIEQ19g~AVVFAktr0agf)G+a1s#|xhjwUWqq6|
z(kB(!Ygm<-+tO44je^{kMpj%<-;&2Fs2$>RJOu79BmqnFG=YsSn8H#&1S(U6IZ5=;
zRs83^5nMwExt<PnN(=0=J$05YwKTCFH+`s3+@x6Aue`;Ng*BttAa_$h&>L0Vbb+$j
zH$-_UcQRKHzdV3w9MNPmDWPSPMWt!kR3Z9z_lE^1@b_GSUv8ks@e41q#UA*(mvmvs
zl*2q2&ciS>S7~$Khb`?rkECzmP>>w2*w`8G>Y9A#2KhYrEk<T03m+!B@Fj_w!7Gd<
zsmQr5z49z(*bk$0%uv0lW6#T!)+dpp6BuVP89c<)kV9<|86rbfG1K6LUEngceCjwH
z=4cKk;u5G+a9Bhl1wcs<St5uML6j(l(-AXyR~KS2T|b2zPVplJB?GdQ2trj5C5k?S
zv2^rl`IX~_29EkW4(<XhN(N-fATl9{5<z4r&M??uafaqMSTy3)(1QKp81Q6|Mah6H
zB}A48BB6Ml!4`|xX?}}EBVHNsD3b7|pe#g!j2-M8hscB=R263$?6Ejg^RGR|K#uSO
zWv&k>8ALo(=@6Nt=r`DJ(XaWRJ;rUT@B?MR8c;Hb&!dFM9K~#dhb`g>4crrdlQAQ?
zn*`PsATpsq@!N{u9#pI&;tP~poZ(qHe9MNzH@kWGW)6qs)8gi@ogm(fhk_Je;=W+6
zdjh}5zjX$czts@?R$T*e&9@pJdI*@fy+y*X;Fq<eP*JdM9MT?mLk4eFRN@m~6Jqke
zgnXhDizF#Ta_=r^ZrtII<}rbrYUvO`(Cg29^bVA7I%@0Yg{g+^)0CG?6fGfmDGSsA
zU&3EQ!-K$^<!#z50$D=?D)3&up^hpANT8M^>P$irI+TT9RT9G$+CbQo3bcm+c*%Hk
za|7LY$?^;DgD*irXsOQxR8UP_lmsG#YSTk8{Dh*6MRzg7FTZA)mlj^4e6z;1dNbQ9
z{0|CfKio|I2gOC|Q^nv*#F$DLQIVf=MB(R0qvaR<>7x_y;}=i?{TKe8Brl<7fH%80
z8NL?`${|u?555F`uswL<CGcXL=)?)(2fk$eP))|a(Bu~sCW)zlA9r6+)L(fw*`Iqz
zXg>}P9<75S4{?LGoxI|Q^5Wp2kIV>zXi8*x#e6b5EoFaPg7zqj68y}l8_^6ROCB`*
zI9y@|_!1L9QzF^d6bY+X*J>&4*P@h+n_p5LL(6knd)a1Ok=b^J#YrldU)wsoz;e9o
zyexn3WIvwy26etW+(5BPc!@PL@qX~d^Y<+Uysy&xo%@&xC52F-O7ov2MW}G!Qnj<R
zSS7v;8<}`*c_@ExHDAH5(&<J@tWxbAsCllwEMKL<y(;akW*Mq@ETgVU2WnL6Kg}}g
z?u|`i2TE!Oi)>Dd0ouXu<YHGP*bymdhh@|?{shD-?4<vAmKjCAlf9xHivi^6$6Jy&
z)lHkQfTruqU9Fq9V*Ymnrh%K=w_v{i;pXP8tFSZ!D_1a|xMOVW|0@S_qHzK6QD9!S
zGlS1ZVm%Im&f%uK4N(kZ)kK1Ib#wEE=Ic(b{chzuuVJ-?i{}#`XpVO_K9X1rbX}&C
zXO~E<YKuS8+^LI5u!wt>Jdjw$hanx`EGJt;zWPjgQ&v)RZEfAq+zEo~L7-~Qu$5Jm
z>CA{R<>XJ=yo$8uxoSD(_s8b;#&xprrMc5Or2hFx*19E0=HLyOb3|O#j)foHt=QR4
z*5hDFfwcCKsochrly5Zaesp|<AZ2Nk^zy%rA&(#~Zyl`AVF?Zr$oK>cQUY#c5D<I0
z7^GkglLK|$<8T~8M<>kVg*pyxb1?wHAOj9a;y=a=q>?<A$YMUf$8ii6LPm^13MMdO
zz>xxuhp<$J5m?6Y4Q8XBjI3~MM(W@PJu<ZdlNiS+fjx|8aCia(D|ImAi37BY5d#+w
z^C1g6p27x778Kz375!<T6{HIQaTLIpxs9H?rMamSYbcg%XvHcxys3}tVzMUgoLtEb
zb9%9nPBd@|aiC9QZb<|YWg7Qk(=TkdBYKRnSx}K`B=mNRMv=tWfeYG*17~9%<Dg&T
z>axJ;puZZkj*M%gKEB=raiFg@=u6qmsJd*i=+y>6LuTw%#Mo};#m$Pu9qeO-?4+OL
z^?F4QG50%CJ=qBgN!^+(uv@IcciN**8gqLi_y<8__=k5zu<WSBR<G9f&v;&N!JhI;
zoajfR=kFC>M9^b$!e(O;X|HV3C7!8&b}ugVj}@!AV;MAJ<NS+CJECq({9DmfxG?BP
zjCZhTEbnzo<!z!5eB+JA;Fb5bOwiN!zv0a;>~p@~MdLsp(y$Pb-r+7*EN2<du0uGo
zy@A6i{b&0_U$3*%$tXG-+R5*QsK!lrbX#A*gDt}FGM-)su7&nNLt}q*-+E}EF&guA
zJ=EK`KG3%iyV+qGH{O0j8!IFZ^f8_6=M~uGE&>9)yi#Jc18J6PZ2e;{!kOo9Mf^8+
z+y@u_%S&x^<SYMP+;Kwtd^@pckNkdxjtQo0Cq-$P(R0v_lgxA$$|B6rzMV+ZGvgoH
z0WY$5iZ3frhT|q0(S)9!FM4({7h#6@cikQLQ3$m;UnFu7Bevvmp8I3?Cuzx?GV<+A
zEjpPZ@I_2`tPGwl)Lw+|>LvZFgeLk~;zT?A>g5XOx;u8Fq>TONWK=R{IP)T+!k@5g
z?sLzthkuf0kp}QFh@K`L-%gX50y5y`N%S+$6llO#>EWPsKl>R2f_TfRd=O5yg}jTs
zyz${JJF^S&16UGQLiwbpW-fkT5CKH~?6Ame*NrGlhzsOLQAp=U^Fm5HCBJ^NzzF=~
zNHV@I@D%~fk8#wT{9Y7P!fz130*R9|-zp|zGf$h4r%CWj2SIt|`-c+{;1@rl#*Zkz
z)ez7P!f${2O~83QRAaCSi<;}sv)Ex0sr+HXZ_#xPKQL(Y$H931Jh!1o=?dL>JxXBF
z6u1WGCFBlmKZdEf2YX6CD52aXjN_bI$P2migcWnh{p2V1Gl#ef$PA)n5Sc-oXVC3Y
zS>~%*fP}(T#xf%dWBq$rl?jXFrJTs1MI$HtaCcaKiwXYe{J8M|jmb1FfmUsEnGip&
zj$i!~8#)6UtD!|)0|r&nSZRZt+hxX$9A;x;96#i1;D_o>N7aU+;m=R_!AtJ|HOMOn
zR>>f}B*>R&KUJ(l7R4c3K%|Bs60Y#ajGW*%mpncig4%8_`C%QbF_I5b`!KCz9%{ua
zN%RBOzPKd)1uD+#<^wn#P4)!PNe*Yi!?hS$N3ahQ%LaCk@zk#5<Ed6bC*2SGB9;BG
z7)Q;ERaASL__O(er+UZxvGaL(${XAInVk_iWP2@PazC*1qZ%;}SIfqF%rX6eZ3_*_
zp=wPWGCNe-d{g|JgGx&^;o0Fz-b(RKM&rWMOyiY=K8<<1tGo0XJ<;ZykImbmd9$9$
zGTEpU`>j?|18<U(m^-lI4iho#VLMP?(4XzEM;r}k+!u@syT69KP=+2enkL+4OExx$
z6+Q6}x3RF4=3j~E;hoI%kDeix+gaH{6{f{Mmcdu?413oi4c?%?9=Y&OHeIgwHHl}k
zv2rlsUk)n<aO<M6z5TTP$L5MgpT-k^E{K0Y`iDC3k2P7v^q=vsFQ~k#t^Tq9nhFu;
zu&fe3(1!8P^6ul$6c=T<?Gz2XIT@~|{0wOF;pl;PH{+@N({>b5559_jnT*-q)PB(|
zUXcx6e+_+Nnm%bfxqmFP{_)MB{0W0N<!2Ad;U#@nFIVW#p7r~8(FbtZ6Z$G}{Hv>G
z+GmxnPY#yFTRYQdt^FJ9<6s$I@jJ6Ho2?J~*q0O}9*;`d1gvXo=eDNib#2YKeeIgY
z;G)mPpfA3owTnY{wn6#H23b$qH%{Y5_;Yb1rK2i7Z-b%FW-#sb5BhA=<qHO{#|HG+
z2mbO1{&Pe2(Xq?d>&EOVGfVf0mkRbh1S2CNUcNAF@Z@;elw)&y$)6DY*7+~0OP6i?
zFXC+v^fjgZA~S1}_Fue0`%U?j?blaQ!1xX72W5Fn1+xsFm5s(YxNQ2>@?3mVi>++S
z$5l!dtZ~y1sr(mzll=DlNNK<AZ|h>J+cs_6H>&6Am~Fq6FPq<lYYonA>5v=Fxh=Ah
zC4T<M#+vx)EEvKsI2J$$J6(!q*zEvft1^+WfGdPVoKw!ofz_~NAP>KTB;+bcJhx{%
zkyHEt{QOE{Pfy-ml*y|I-g!Me_}>*ml@KyJP=$GdNQ1YBbaPwc;s;*G1hbTp!C!PN
zkl&0gaa5Ba<VYzy`Axpbz)wZVn1^;V!D70a&_@A7vYr^|Nbo8@c00ju1FW3@zq~+d
z{P&CBejKNLzu4@Qsg$nn_ASkck8d~m@r?nHEgTBAbyAA#D6uWdP1b5^kGHME<DrRa
zDP^sA4sNP4tl7fD&na{%^_uWiwvJzq9F@+TWK>#j3heDqKyE`gqJ-O!Q!ER}SaCFv
zHaaY~nJD-9Fd|yiAHgjUB>gX6@cK1xN0ISLh!Se+O;Q9JxW#a>$^NluU@tb=5A6Fn
z;?RnwLW%uVg`vKXANLcw)qbGQGq(-mAMcxRdn^8#E&0>@vs>N=eR$jS>BML$T#%b#
zMC1L#?K1ttO<XB%ZBE@y|6sm8Kgt+8-`Ad%cs2Yht6g1KRal1i1i-%v){4QH*z@$Z
zOZ#sc|2+7IZTv9?>_ZIyqJG@6r}P_^>q^%J`pzRkjzC{2H5Qklk4`N<k9#e620p~d
zF00)g>OV%$_DLKS|Ee&O%VKKifAKHsN2NYbk8I&tJ+jg-;Ec!%2JjjKRG??ZzqHZ!
zl-p$ZKn{(~?X-K^8-H8N*M{TeC-4vP-qlbJ?X8n4XoR#thTfxoyuKTq5#!AxM>z4E
zy7|M5<?=0?;&>Rl8P8*GZnpQ0c*1c99ze#Y>`Pd;SR-?Eo8w#Yc<StxRn?IP)-7GJ
za%DZVOXi$=@1qYt-dVZly>~wR<a_ttqS7sM-sL>7cVOm6&d$nP=Ij~5^t5+i+0aLj
zo;vq_eF)Rj%ZA>~a74mX_JL)mGc%xj?sUCOZ2LsIWsXV*YFGx{(_*K_m#I>{Oixo6
zW$*nHI0JsIxo7C3k3ariWs$Y>&WDr&ez608U=EVlf%MV8sATLw$=W%u2CSW@#4Xfh
z^KO~b?^8R^)$fBu-O3`j<~hvG-?CpF$#HJHf90CxD<4=FU9qz2zU2=rTlc`qbt|eP
zYpYkY|KRpVAAf>&6Qutr-SU)5Po4W0ZTEXDqpq|Yx+49P`b%AOs<<Y0_T77nX}7g=
z-t?c?p=${{(hEsDw%zJaqW{EBqW|DXO8?QVYwkbw=e+4Z^+)?pJxKQ7oV5O%uGe@5
z@T{}Fre~e$HFMUzr@i(*&#VK>Os|Qwtl0Ki+F8fN6<Ew*dJT5C2!XokXWjqkUX!!#
zDcfsu)<K%=th@djE9+Op)~#-+UmB6^`*5bcpJC3lf64z|%#-sjcFR*-aDmpb&#HrS
z&dEX&cNzK&Ww=tgkfi2E=(FHc=bw{4t9dRn!-q50^jQh|p|>(P2PZujr1WPyy%E;b
zK6?&lT2Wx8?X%nrACD|J_W^RVot+Wsvz^tR*g;LX9B@|JGZre4N;1VN4j#|KlH3fZ
zXb!G;Ua2*(<Liw;g^u7#Eeq_7+_E2%)U<sDm*v{TmHO0q=vI1e4HwfC1s1>2b>ss?
z8Xx(9X=a%0BT|US>W#m(`GURa_|4qfq%8h0GeVX>^#&#VrYGfB@Wah*Ti0!Ei(_p`
z`kM5%W|?6sPuwe|+?MskyRpzDt%h$?ysgEVfk*36X8lO{?T>xN+tzh8$KfgVZ?Os~
zjwZ?`H@s~th8Pm{rZk*ZISac`I2oZty_78k*!V<#iXVwP!O2WzhVDw#Nw+nben!Q$
zsekpF)H6d<w`?+RGDCM?oBfL9@xQ9pUZeR?_}bhFedU_;GZsy$KFRr)xXYis=dSh0
zTw~8&+i8_qac$>SX2sMe$`n6b9P{Iq_kma;hCOip>c0Z9AnxNcvKvRr=SX|}VKb-)
z4K9_d0zNu6_TNicb?cNSZcP3*+Ys-3c-;g$%Z;7erm}NNT)Cp1`;492r?T_f=Va%N
ztFyDr_;c%2{#^K+><nL>9lT9Qj#t@K{`{Yxlbx&VpDX%vPW+kf6pUS|Nv~gBla^lT
zP@VquUC|5bif3_+ab?P@;q2$-%CFV2Ls!?awWc*wUX$9fzkaV=rJXDKbJDbnA7_s9
z_6-I{1+RZwUfSwh@8HF}$Wj~yO2!R9=aQ6AU3FnZD?4u*bS{Z8ynxQ&NrP8}9HWur
zyeV&yg*-Acay<s5m@#s_lp{4;^hQQz3BEaEs#$!?$R`bQann@=wd*)j;S0vfGX|e9
zxI^)zS#@@j;}Hm!_gRsyA<}j^xI5Kg`7EaKIvb6iPK4vVV@B5P(D4dABb)8gjdW$m
zHYygcnm1D`7MrPc%WK5RmV0rumqCz^;0ARS5o9cCLX5|xWEB%pRT<}-q+p#{QDqTj
zX1Rq$`@o0A5>t+?R=~$V<8j<I0Oz)d6HIHN@P<S!J+gkJ@mXGr;O$^l%Wp9kE49>Q
zKR4P&=*O~QjLN(Hy~<r^9aJ?JW9Skrnr!PwKF8+~@=bY+1KtS04nYi)3!1e~vHl>o
z)<D2cPrC$rb>&Kbzw#%MrLMcj5cE%hh8JV&s&9DnEx(Mw!=HJokl*k2KS52dtud&6
zB$ir<h;oZ+H^I-9QV0pTL&S7`&`AMM9GhqO=k1ckJY-LV@jr`a*}Lsu<7e^bHLO4N
zZ|0Oag!Ji!lwXI5UkSENdC7ZNKHNQi$|B`QlRWu7#nN?s{20BC>l9ZEcNP%TC+Bf`
zi_C}WrwF{x8Pd^KkPiZsTRB}1MM0jdL>_#gB#2B*iV45;b0(=cWkJ%CalrbeEaUjC
zAL%F;JN==bG(${vTq-0AkProEj4Pl5GiXV+T@Wp!#N0GlDqADuwN@3)B2GLyq4LzR
z)ks=E74^;4z1i_hy(tW&qkhK2xcPBrF~i6ihSy@^d3uv!Wm^uEn$jA4@r=WOk%2+l
z1&Vo#c#dD`upIj83T(}QsbKdwXKj>;y(=Mi4-j4=d5O#zSJ4(^At4IT5CvO6WCj2l
z{9~AiQpr|MV2V|#2S*I5J`Ex8ITwKZ1%r^Wrw0zU6mfeGChQ?(F(rxkhz?}Ls>7<1
zlv0-20vN-`0%duA2Lhg?kz!WBd4&gcz{F>Egb|jJ$Mah?<&hse+(Y+Z#0vqbA0oFH
z=PS5y;%hZJn425H2NQTGkd`&&43@`>s7sglF@~yq3P>Gb5|)?&CukA3D)^@nT!Jm|
zBSX~aBvW#YvMqA;p+XSv$$*!zqVI_SD`_O4@n|TXCF1i+w2bz#fW`cSATnaiO>2_n
z*i{83FfLgzLIoC}Ew+k?h;nm#5qHeXZQSK~^Ex^@S%5D`*74@`u)j!bY_af4A${M=
zY4v-yH};aRrw534k;;B26zPWn<cn9+8j>CJ2B?B%yB4K}-R|(1NS>F1x1H$O&Rh}#
zCgJ~ge<u0DKX_~q!b1GnaO*KmH4?!4LxXAjB60&k3CDC}QKWA>apKRI1vf~aY%tv6
z-lOnK6`1yZj)!@V3EnzLN6-*O&-)H#G`r=PAU8=A*`Pp5bepl7<Ub*F9v($D4ka{1
zX5C|dIr4YHXYs<wFGa@Yfd;j26MHNEQYlBw`|Czb&;1hZ)e`Va!ummeEdfdsJ@3{8
zT3+HYs3m!SDaRqfYxa5^`FpiRB=v}C%HNCRc@P^_!@JF3Dp=knntAKsUyc4(;eBKD
z-NELz?l?Xp`CiHIY}?YrJ<8?L(5x)S-_^bio13qD)NwN3PKx+xnE8V&XXXZ0UB_WX
zj84rlx*O#+oRV9GM|`nBqkG-f&i3y(0nANs-~4r(<K0c0bo2C7f|2nAPmd$Wn3SM;
z9Kj5}Ns|u;r&_(36zTSp<E&2Zc5E`M`2Cz2<)cve9h~_CU<~*!{{92f%Ypv|^YNID
z|2DHV`AwG2a&orfEw1aD+hpf`zvFLfZ_-`t??~RDZr2^Fzl`3(=0jiJ)V{5&xywlF
zTCfrSx==Qja_Uy&?Pe=|zjH$(XI(dUg-^Mw?cCPZjK`q~x`Fd7C)YCLcr<Tlg%{Y(
z8zxLzO{6?s9B=E1Khm`hyN@^HS9?x7Hq+kLy$-J$=x&~DBt9cKu%2@3-PqiWovhot
zxvF$d>lRu_FivEjpX?GWB*MP_y19~`GBcdnXm2A{LbSDZKl1ez!x)R5(TGMp?4-_t
zZNi@U9A@~<H8*8YZgX=RmMdXz{mq|ud+!;Zw!N58$uZ}c9>^~wyONvJ<5BwY=ONFg
z?=;Khj?=_kIXr{E#giN7DK_fY^E9W5t0KO!e0BA@#pU{#c*^g^E!$hOoXlmo9Ar9T
zC0G4n+kW#gAhVV0<b#3=>7OyUtWz)6cakD6)<emQRjp3)88iN3o%k6u?z%k;7iwVm
z6#kgLkLl!fYm&HbCA?|y@;HPiBEOx6Z;pPddLstkOhd=Wj@EZ9erV)$98=!64Zb-F
z8KlaOK~3f7LSW&2OZiW}Zuo}{|A>(<8UH>s`W9__EMh^a*t=wS4Zir+=;c@6(iNPq
zU;6a2@PDcckuh3&F-Q0@jyWuRmqsrL|A%82l^-Ll(tcW?eS;^{Fy}4hfAMwYJ(;8U
z=7kjgVZ;BX;UBrA{G%989eHcy)3J*umHz^)3I7F-@PhwMX#o&s>BpPHikB}Kyk7Y)
zUI0JKFH#Zxei{5@!}w!J<-dq>@Q+@P{ssS~kxQ49|028t_t+@p%NH+=$|_i0r~RQ>
zxBd30;k}eV<$ufYzdoY;IZyz%EcymNePjT`*k$~I|5GkR2LGp{pCUo-%Q#oaKZgJ0
zml}4RxUL%?HT)xnA2h;$0sQQki^IwfZK-G%?9wWO@B_)ug}~&$Og`ZU<7ePUZ;hd?
z7ui<uqhH}Z_}R~Pu`zWR$j>l>V@n)mUo((j(8xGjZTk(%x_PvJgfh5f{Wy*_yAk|2
zzmd3zK4%7di~VeaP3qMMUR%JnGqCRkt)_~It*Y?ADUrc1>!-m_TKaRD8SHP#fHq|g
zQu!vXWR=S`C9)&Z<433yx#owkl}$yP8%)Smd72C%D|OGiAF1$Flh>lyqWD#VSY*t6
zh)v-t!LVYJs4s3ktkn)54xeC(__8EaMsje7vJGE**`^G?70GkYUxP_ACiu}5UW5{6
z6H~&=OfP=g@P@-D#E}$yJw-VjGo|6LrRI*Pa1YS%C;a%17A;A0H(A>n)OM%vnhfiY
z*0B6vv(+T~9(0qjXmCjy4jMUu#vfY^yf3Q-%a@Lmmxh;IBd_&i0>817IPS?KttBrD
zOz`Ro{OSE*Wy>}>;-$b6EK>N%YQ|qX@e^!o$AE3i1;1i2tcdnWzU^3xqC0hTSC^J4
zR)wvctdZo^Jj-wKE8K67;VTAJva!ufN0fgZe|L4M;&@EGR30)lEm~fSQ}BO9?OLZ&
z@$2ttnMIWtFRIeCMM}d%l2<W&M)4u-?~1RC?|&4o76lVc!=Ivt=Q$);H2f(V;qg-@
zbIkNYqx_U!*rMo}aRL2(Js}=Ij!|t`*h1X}4W3kOkR50tjz?^_Cq^0?>J2t3t~Hp>
zJ0(9ph@}cpbQ&~c0sTNh8gJ4M%WF~J&ahyuqSs<jyqYX(@v1724;JAk3O^CN-dcm$
zW|*ef&Jtvs_Qn)Tu&V<yJ-i%3`BF2aK;L1n$z(kKkj=I;LMgvm_+W_5PWjcmp|!I+
zk)QITa{S~`%B<6bCs$G?tI}u2rk>$SF*sowE2V5BUZgedQJ566X=cU}>n3f3Q%sI~
zN(QgGb7n{RgBouc!y5}RDCAT(RD~-r)Y|~W!&I>byuUsis)*r8@FFSUp#cVYWN?gv
z1ROMjOj1J+pCoXUO42i8*fSEE$md($8RV_+lE9}=o#6+#4JB24$}8r@sunE@<D4mh
z76yZbC2A0xz%v^mqJTK6v^<YWm}yZ9mNE;$@>*OP#YYi&y^^X>3c}f{MG@@ABF0j9
zO=}}1V(zLV%Rdp(x#W$;V&u<<{Rj~4*N}!0E3dg~>ZD?|sRR^1EMftGC`EL;7dVj5
z<1fMTmBg0ecG0|KbbpP!YZR{o_4VRKqIjREfozqsefG7YETgW0BH0NMN(06~>W+&0
zYf^Vql#LZ-Aw0KIRLSnBxOl$ZQBk&8#47hxJJdA`;juI073^TQMe15R{UR;1J3P9L
z#()6!J}fkj$aam`eGybNP-u2$+&9_okptN!=$?V)i9Q=xp4w;2BPH5PlDXX1J779%
zc}eba-$2ClS;@eFNc)%DwrbyNTWg93vKPYu-I@PnO^N$6U+;e795NwAOrI4!sZHKr
z<A1+1LS6V@^dt-b;D~#k$FO+7PdkKO$%O7Qkzfaztdh$H&EH@1Gaq}9c4)5H?Sz44
zCAog_2Yoi5j=%%<+4=VyL*#hh_=D{*pG@C966e{!)qMzMvJM|&oJ5o9J5HzJa>uM3
zX3jX(7Q{3f3n55AQl~CCA16uHKo%y^m{AM~2}Il=P?Bnp23Xmc<Mbmak;CaR8s&T<
zWh7<3k<*H@7$GW#pv<W>p;C`HBL_;EdV~?O;~zL-0LCRBEL1^&vgUF^vR=Gl>tx0g
zX3$_xU2=*Kro3PyChq9WTsIi$=#0;$uRR^oCzu|jKJ=gy<R233LNA!dR^S__u7bI_
zxpiXG_3BuM%`$u>kv>bAQfz6_dB$K%Jh%(O!j`$Yg}YlCy^TGcyLMrQF^J_hczYV#
z6)f!~4Fe|`B^~tSM4c)!`=YN;?vGAQ-W~yvD@cGWB2dH@l{7tB%o#wlYHt#9Q?hmZ
z{^+bjWrGCBP!bgAF`^37#Jbo>sCSy(&#|q!?t77v(N7KPrXY$b3jir4H%T|5W=<1x
zv!mp$=eo`h8R8I2nAmU7$_AN@a>gkrxrYxM(86hA%xxlYo#V3xB_aGQVImEw$b14&
zAc;~sIA}l%r-?E1h%nnxJVCk_B?AfOF(VCGj(h<iCCDnCu!c1E%JHxU$0Fz?2|URJ
z`3+jxl#7UR5r<WKcvy2a?`mR>0wZvlEyML(X3GFti;|U;Rl^jI$hutWi}uKft#8CD
z0tOoyZjd-7;;Lc>@TQ@Nqo#ONOGiglTg$E`#z^6`!ErG5kAN8nMTIdVj%lgM{0yLL
z=_cLE1Wo^4_}qJ7{LkGC`!g@?=PnP+9NbI&?yc3BnoYiMStm48UWJ|V>g5S#X>Vbk
zSU&!R%oECg_tt6*G2Ae|lXyAg;DCJ2Z>`p=>@&VIdj2HujIJ6@e`oXzaM(Y*pW3m1
zHqT-f$|n0``7Zo%qQ?GFzScimmw2sp)A>KEjnBgSyE>okc>S*5KF5B$!uBe-q(WHj
zG~M<pZa;=Q=0AC#d3i_iX&qd`+cxw)9f`3aGbn^1B6({EhC8H+9UD?<-_nE~W5C)m
z=1$wUf7mgmtF^-o9jHq?eC>y9!vQjt^sODIK_;&R!Hx`25o&q02)67{$veQ!D7d+X
z0ky-oh%ghc2r-aPDGH@4ZLebbug0{ysMlY_KmIr1S4r}N*(H(8<s}1A=9zpCNe_9;
z`KS4N2wul2|A5J_o!@b8KL7B4pyM1AOP-#+yyU$Veq{KA$p2Z%Kqr;UhjME1=P%kb
zpGKHR<15Ptmaj_Khi6Ze4DfFS@|KtE7gxm}$(Phb|4~*~I<P#atT>w*M*nHpc{-<b
z$jvD~J*@eA*r2DueI~E`*xrWNvAyCaonOA7flkgU9~z!RKhYRzeM9-s(*@sTe$K2=
zR}Ndqzo&0(So?HN`Or<J$My!whi<m{11rjh1|BRw3&_c7JGDHSA9{J<AxZ<$<t0VE
ziF{;uE6UHTDE-@pg3>c9{6&xF(^s)WBc(&bIh%&^Y`e($bWZ5M<&^(;Z$o|QdgPa|
z(}s#08iopf@8uHslXLLcUf3^3>&u4<%7^%ugZu{kAyv-5p@pFaLQd#MH^G0VG#{xm
z!{tBQhYZOa%2`!D^rfxmAe>u)hHe<jez0v|dFZEaL4W@L^3(sT{OtHU<<cqclx_Ak
zPYg{x!}IIU)J&KdN->!})08^FlfKJHN~7e-C)?PRrI(G{8XK`*u&KQh+p_5b%d`cb
zvt_4|w)Tx1@irbGSBUzZ>ssPXT-7@R3xT^gC1%l5)*)_c@7!Xn_HfgYmiQLjijRNg
z<~46`GMy{F9;`mTT2E|8+>~56nd0#0*bUv=8g1t$x?vLXmex+AhVP&|&0mP$NBq0O
z*A{-Zccy)9-H@^?*t&1XY|Z!2y!+9PS0B3b%&B*Fy!!iJo_Fe<tv`L}&UxQgnEkj&
zvmZb8=g0)S^U$4hzh8aq7n|+?P`6<3nZ}pazxZutQg?=TVAcQj&D-aS^yU0nyK4S;
z?QL^s&)D?Shak<!d~VIH1>c|1`wNwJRhAXZI@9~wrl00Lar)g|mCvr)`*<UyhrWFJ
z-HyATT~(SNeTh<DcKq%m50vK5s$T!+l=@B`dEiTsqAxx4<=pJpvAS|dGrXhg|D4~T
zk<vpC>=o&uFZ=Lr^n)wDl;<7&=8NCHGvId%_t!4W+dJc%FMjimfZvy?Qs#lRw^Pap
zEXd0~lZhs%w67+|35?sK$#fex)8a;82C$!+Yzt=h@j9o{xx{{8W?L}b4-C4pNto;h
z_HWb9RZZAnJ^PyWX!Dv@zR`<=v}OewQlC@6tEyJ(0%utPADB3~jj4#=ZjebAxFAz9
zX6i&mPLps3g!2@frxB59Op&M{bvT0oMU6PCA|U~s2BC2+fEs5<_}mt3idlIWi&~id
zz)T6}Q2<gOGd3j0ga#kj!VC$gR5<-4>YVhTVg9EnOnJbtJXyv%_(LTA(yAInCL3je
z^E&va+G2o{M9d;Bn+`5Ii#Z(x5+jB5xS5s2{slYmWCp?$8>?k&fF1vTd*2!y*KwVB
z34$a*Q6vTrJ{-rw3_y{TWtRpcS(Fo71TdsXnu-WeP~@$o=ph~=ED!((fFNlT7X`s4
z<ftr?;(ASQZAzh|#A328$v-w(+qKKcwk%s@N>1{_RZFsHN7?d^@R5{jOR3rr`+ete
z=gyrO0F-Du4>dXc-P3*goYQ^p4Epxt^h0;@T{Zx@h!`j-mp3x{a*axR#ys`M^_m&M
z7Iz$QBb7teGd7{~xOwXL`nq1P{vFa9H&{8uS+k>^Im8hJalK))>s=6@8yP)f!XCP_
zO0K-VuJ^i|z4T{-3tcjJ{sgh=A&Pez?Z`zD$Tt#8L>fr7YuOBmlA!WX0y%A3UKh<|
z?$o6!EO93mVJND8*XJ0~OF1Mv#R^%`mThO*OvXS7kE8l24s=_qqR5ea(4ybcB?AJC
z-}!{hDg`-83ep&u1#5^5cWzb463NMRh7=Fl<S0#krbp28B{^%$QnI>AMbjj1)ay=5
zGO^Uhl&IdQez$`t=_V$dXjcvRO_e16)>2TSQ8OHk4eMl>i{Pk~$6Gro9rf<i>Or3*
zL@<-x*2mLq8@F;{REb_opdEPj`Lox$fDie~e&+8}z7^|J#y!m@YB+!p4q+sf;=!Xj
zXaSJH4<EuP9ty#-9UB7y<X?L5RF4e_v@Gd<>A^qkaXCl7|I)*M`Ve_3?pW>CZl$o?
zrnUZ={_a;EHaTCY|Ne{J<fR;}^lAOB%i)*|dVADCUQ*BR_`9mFlEP@t_FEgC`Mav4
zySN~Qqd5&fSW<uD!BY<jb!7XkTRUEQ_-nt}a`af&?O(co!|~;>{MOeVh9T9PfB%7v
z$A9qRzLy`y+MK>u2X}A!PdmSx{~w=ft^fY?PoDVo7v>!bxq<D+Dth}>Pwi+uzO&GN
zxjVjmf1&-dUq98QEynii`>VmtO07lv{ozjz{`&9l_V)YEKcbrsURm~p_IqmkA3aFk
zUtIf@^ECV3Q#apJSL$gtvHd$ZRTvB7Fj~3x3)}Eby@y{)E{x;p#2h5Vy0DqIxS);S
zMl9Sq%BNq)F1f%Ci70Xu0{AUr9>0zDO@$m#SY{^QRFr)GvsksZL%yjZ2b6wOp##4T
zNBo=01z=n(X5ZAKc+!q+U*E7pzNyeDPuk8URbPFG)?wiwzp3>{ciY;tFFgMPy!+uB
zUt5hIMRXOV>#W^Jq4`_M^tn;9+55DftFV_u=oCvDdaGPm1i1)EDd<y8MuV-07Cs6<
zvgnB*#UP!1Y{@6U8X>g@4HEp43S{?O<g=@ea1!<q$)V{ngt=~yAf+pNc}#<0O2mm?
zh$T1A`zC(yo2Jb+z5AB;5Xodg&1p$%39N3Fbl^r_G|)d(0n?z@&ZJU2$zd%r96`2Z
z+OXR`QQwjgJ6Jf}jvsD=zfF?ML@jNah|&<BN@X$|A-)BF^EYBqSBTJ;nwgnuVe^22
zm>^?1Q4dzpkG>(=0jEzuqPqjQ?N7?6j3-TL0$erVqUGd<$&=9A(zfyQUj?R8Vn-TJ
zR!l!Krf~P#pr7pz%c)oO-)8N9+aJf3#pyP4Nzvw>BK~;t$v@7MYjX0d%8YhML3WDw
z1K$N)@FB<Tn<6sQZ#by0Xeo920KXGjG#cBJK>?BA`tRmSGU$~BWk5FvtQ#Zjx)zUi
zNO1jlQ>01wNHR<UGE=`9d|9NO%rwB&*GWR-pFy4Iqw%8OXuv!nnJ6AgUf~0Hu|*f2
z937GMgDE_(;y!~pMtCDz&gq+#uA(0;IB$-OL-&sCo9y4GW1!FDi9tZs2yH+<=5484
zu}O~?x7y~pa5J56YRi0t`3$ygFLUB~A(g&IuM3IMOyqeXO)ltFLrA+pw5K>=gI>Ad
z`ipX14^TEI!7ksVlwoJy!rfYLwu9((q#@2zz~>8>Wv}ioO7%@i*uWzi0ei?mxO<FO
z*m9MZc9$E#U1HQLyT!~dVX|lpI8$L~m$LZICB=wdQ5>Q7WGL(|Ev35{Q?`3B)k6K7
zXEe`n^UTv376JO^EzK_<gA?Jdu)bmar5(Iogb9)FqKxilbp11Ghv)~ZqZeHmYO|x^
z_biM*!nGOoMsU535sr6!i6`><gWVPsZ1d;Sk$(dUAuVs{nT(?kH>4YsC!JZa{^w1q
zqmuspaOB?}gtYuEA~qPUs3R8Kzaq&6)a;BUYi4o$ype+b_~DD9$&NAoINwR~3#jbS
z&o)e#V1pf8ADe`#?$2S`XvsisXbkgOMH5V(Xp>waIXsfboR`gn>9mvPg|kl)pD6sr
z9_SzLrCXJv*{^r3*zH)jX8+?8`NK5lKC$>TV&rer99z#yCM_d>nNW-;8N`}kiA?~O
zb)!C%dn{L}Kv@s>a}_AKtBFjBN&&8vtXdW<m#uKS1|QiEe=;`8i=mUC&Sol-HniC0
zLycQFsuBbbKBPWs`ybg#?(neNL%I}Qco@B8SIfl(aPZO_bVVEl-#DlE2Al*(X(5Ut
zpD}5U4XuhD$lOgknv06eLDYOhGhcYam}H?g%)DuiLZw-5RMN8A3_A^X8-B`g)bLP@
zHgdrb(_3eHn_cgNCh1d#alJ<@{gB~8p@QC|>Al1C_M5;;dS9@7w_`s2^XP3ey<1%G
zV<zx$OwS8OzpS`CcyEns9>4z+IE@a03sWa^2S)d9pBPs<vOHK5V(n##zmPSq%c1P1
z#YG1>%>EN-oCWdE9~Y<Sk>gkfZ~_e0XY7@w8(?|@h2ICnaS;Ff*I1t#Jq{u!CGv(6
zE&VH2`fuhgJ&z48WgZ*mk@Eh9)npziAGo1X{_0(|%PnThyOXl!hTNmIH$=+18!F|m
zxv2W4Y;HXF5RW(>84iMFe~#V({x8|ZLz1v0iTl_m#)9gBiJ>9*`FaxW&G^)pS>1ih
z=J@LF+ri0C5c~>0zP6j!?|uH2w!u6TT)4Fp^GtAIuk%zpRxCb~#U}0P_U3GA$Hp)2
z#NO-n=IM@P-OP^LzxW9*n0)`|NcFXSap!taQ|+C}Bd_<h?Py(p3>%%>S9}gsM-q(R
zZ#~(y@pGL?DcrvP*vZ`O$H|+lJGAB2`tN7&INq5`;7rWV+)L`!+;*Xo0pw)Ap4)hw
zdCA~2_s&d1&hZ_sO07RO)xPog&elW?^VVZxs`WT_RfG4?7VNjr9>acnDOrb6`0PpS
z$0o)7*tOZI_PUwQ6pq7ehPe8vd+K1_(Haql4c!=iZ>f8Iy5sl`R;c5i?Jb1%W~tsi
z&Bx}O;6nS=Q&(+u8-VRcs^wVQIsjU1-3nCy=<9teto=UME|S-2`>k7{l(ipP5{<fU
zMc97HBOOAq{iaxQ8rF-3sdj-+s=g!^hN(UQ$WbbbdM81p60qeMd6lY}uA9-4CMRif
z>Qaf?R@!aivMPt|hs131C_vf|;#h@g+6w3p=<CpW!Dz47ilE#C*Dvm=n`)0fbxMU#
zU9~-R98pDh-ybNPQat4d@_naHNnS#;^jhLIc6I`=o@27uLyh6DBJ_0SKgjoX9CqA*
z;R6OG@rth`VpH`#Ljfm3CclX2mn67{mRXzv;#3X<o-myzV&H)ESOH0Lq`^?2C|Y;4
zh%8IQ?Jydn(B<_*pWBh9KqG-5PcS8sSZ8>`P*Zsj_I!bZ-{c`4G#sNooNcWQ4*hA+
zVZDunek2y_U1$33IBz}sgJsKwHIi6PzZ-N=IM%3o=uZpXpv^DW9(lW){*XMX3@03&
zKY~_&Ho!q9yFqJ=j<7EH(#<HrqatEm(Op}UP;>P@&;Zr5#&E$}g|T>YVm=2*k?ws(
zM@J<iIgtUN`113}cuJ8&rN~%Q=yzx#<4_S*bBr~Wct<K7Ybv8Gbl}86pGB1ieb6^3
zghRII>>0zy@e{V5YqnDByVW6(BQhjiFdC^}t3n=~7%{ZQFa=ts2sX)}XDS86ED7ff
z;7?p8b9f2;tym$Hhh9MTKEn=VFr5tZ1m`KBPw5p3s#+SNX`H2G(DaUujywqJ=PV$R
znJJ_TzSF404xbm?IHe-d9&&*RVMR@j#~=K<rZ~p)7fNs7d?>;O&W|$SxA?ZNzy#bD
zaq$jwZWH(F$cv!pg?o9`f08BV4c%opIQ`7vc2F<eJIZYl@AYT~b+6AyM18*t^6nTN
z`l1&}B@rGU364b!-u%?785xL${+5FHBK>$8+>Qn5-;l?b31I^bo+E_%A^)WE-R7?D
zBke9ZA#Ds;Ao1>lRevr)_K4^j12FnCJ6D<O%)=y*l)z&cmfUE19bNyauTBY%KL(E8
zZlQqrF7#Z6O*oLE_-{=(5zZr}(b=DB$5GJLRg35}imtwt3Z|G>%Z@kl0L@A@AK`J+
zJUyCuEFu(mr#n<YC<l2EaEQRp_e{3Fw(vrcM8{ma;>8_v>EKIWUi#<k;9JkWoMSFA
z90t%v+F?+ql%9Ug`l!V`d0cB}5LjIgm6OAEaXC^~mxKEJYiYCh_IWI@SBC8n!pSu#
zx|t&>8zE#f1e0Wyn(}auhA=Z37qWmwvXY55WO4^c8aXO~J1lrf(4{V90b$9in3<Z5
zS1oagg>ulDN@9xzHf3<{2Y{}!U@8*v;WYwQlhFuVLnid2NFtGjPV6K>#285;mNZub
zv9=UJ1-QmVmg{h^wWA%cS`?>SK5z*otOqV&Hm*Q}5d;`PW48zFkQGLvh?O7<i>Ya%
z8)-sm<!C&Y35gP|V<XK`3G%xJd!Ph86QK$bnJ65A^1-Ef1~djqOy&n18d!?|kpw_s
zEW9Q|`auB#e0WLFttv+R9Kjud6;PGAe=za+g`{OaCmZ0UOC%Ri=TY4qm}LjbRhVUs
z%(lKO%iyI;CS8Fd$4EH%(z)0Wl?;@N-UT%{zEdOMrHgYkbm%1_3Mk1)cT^3^1%4$t
zn*FYVxbcDnpv>X|MP31Qa@Vp0<pRHHy}qg6Qd8-!i?iEA<{C*9<^qz7`2v9yBCRB*
z;oe!GuP)A_6Dc8rGP!QaOcw>pO+Fz5n}QFF<e|aW6{3E=R-z<nM+!1BiXvaR3da#k
zA@WOZ5KzWKf_U#*WsbfaQIP2%1u2KLA(Kfvk_0UzP{;ymvL9s<q9wzB@S;yH#@&m1
z6;8!gEU46f`*Cfs;=#e8{;k8~gX4pAu#A9hsxkT(xG~l&SSqVr#`tsR>k1_2Mnvy<
z9NUq_4|!o7L5Wwe$dZDRyx8i3(){9u1||6gzgi_(b-VS{vHac#aJ1LR*mwy??frwp
z{bT!c1EpC@c04jPG7>9+YA)~YAL!3>aT}g)oEp}d%Rh!y2lwa39vxd2EZw!Es|U@2
zuq;^IzN1?nu-YK8Yw+O2VBgr!c}Ms=nlQ$1;a`@SFuwJ_#wU!|pfcq?O-NtJ2W4kx
zPd>dE>o?$6?Du5-Mr@t;P(Rkpje&!UH?{z=c;o+d@Fyg?)4hg2yR&6}cG30zr3SuS
z;BAHPD}3qTn+vY}b%!M09Lz$#p^!spjU|uoDaIoFxE28_P8IMiNdjJAz|5Bbk(`EB
zNaY)a=vOYjZs5Zd%}=8rPvt<q`XqI#fv+Rz*&|{a{y~>8BwA?#lKJW*w(zwFDd_!E
zE#HSw4<x4fx?(Q|w3~V$t6Sb05>08o#ULGCixchG){^17Redry07<EOoTY;pSsy_`
zNKZDcCO;Tjp$dTqD8NX4D}i)g)F&rl1^*`}dJ^4y$E)v_oc#KpE_tDWYkyP*%uNkq
zM=G60IUE(=n?b2m(`xEXrn&}JLvJ$G@{!d8Pz&~l23P}%MzRK6N>bAIgJ6Tm!7k?2
zCwqFDx^a<Db>koQTdeQt7PK=cHl%uN_-c>ht-ZwcJg~xXA1->(4#f364+-L`n{>rs
zW0*MF!VZ^6iGJtbz%hFXIFmzhkD`ojQ;q5e?n6e8>+R_={e`nPwOogS#o<7lt10B>
z3zu_TnRTJ{c4UW?z+?c!COst<NGhAs^I3s~5E*y$VO64xn>rS_ORqu=$29N6*NHj`
z==wJnj>~0ct7oT9w6vvCx1Tw~RD=&HFb>CUPnsw%qg7#ZGw}QgMSMMk29}0KOX5yx
z2FJ!sTIjV6iZeoCqgf0|Hudy$5vdLrAT@y(l7S>eFvWuFD}$aCD^WtOHJgB_HNs4y
zsSAL~R7a*pL)5G_2Vpqs4McE6yO{p9PiaY4lbErD8Phw11kOyZoq0;;aUBPY9%x54
z^0DO|4MJgPm@cA_YYu`$vLF)G4qU|ax_*dfSya<zL!ZH`I^{cVH##c`+;6Y>*bU!9
zzHGZHY^44!2vSmz^<V(sI-C40pysWm4CT=aQHM*%9j;%oF)In&|DX6I$^uoP*a1N>
zOPd8)R==uQXL=*JApHr`k9J5Tj-sLAWT1(+0Vvf+vfLG|l*C&9WAc{?`W%zYjOafq
z%qLE0O92stL9o&2Z2LOlfIbP1N>zy0CGNrRM;f{73}KVl0i+#GUD_T^xTi-+_k2<k
z@KuuppqQ(51cN>ExLQ!?;?zhQtWEfhSH#~!d1iYk823zC4S%CVG9IO-E~a<OpLH3R
z1c|?Q9Ixa!Wfy_+47(I7#9cjm+NiIKzvAQpwg_Oqlwp@4CDI-u)QcwmRDz`bl)O}P
zWpezb8uLG>rnxDJqi-E*)4gYz2+}D>CetR)Id~;>8jlnSD0L)BS}@%pP#UE*AHTSo
z=ZNkMgWHketZDfGbHpNX8In$<>8(S>5gSlQT!8@nn6T(^Wf|~GF#REI$#a5Km2Nnc
z>rQPN)3*mm!-$%1*<s7gDSIKAl#3mDqF*qo&-HiV%THnHM6rH5fiT>(*}D*p&U4ou
z-5Ge7?Az<i;Q13fBvtj{Nf5mSY!rVo_+ubabQdX3LNvv0kE<w)zPIbHp1UQ#r$_A&
z{YX(tvhe6N@B%3JHiAg)+2gxcLtIb;pqdPK?NR-XnpzZ_TIz3LMuY~1?x0mTL^910
zp0>P7XxZ4!D#0<Tw}Cm>q7J;Phw3}=al~a&;C@a9+g};QuSmM*lelXSW7|KO;0{#m
z9ZWQ6veut1piGW<aA^P^97j?!su`02qQNj-KuHEo=5#{fuC9cn;^!E8sJ|hiU-hO<
zFKz@vMi)@wPxo<6FkE*+`#vX*q8o%De_$FiI}GnJyi@-E!faupG6^(@!RdxfdYy0*
zi>JPq`|_d+d%zd6%qm=t<gy}bpW@4`B3bceQ43gsRkGV}LCd8|mVuR9(^X;AcT3%L
zvSvD2olMqbo1g8i>FB6qTsN(8vWC}5L=tbA?oHNg@2CdH>mAiC%&TT5I2gCAL;P$f
z;_75af^kiU#))Tnop_e1VO%%WQI||Hp04T8xNe%)kXNViR6S*@ebdPmv`^x?X<oZt
zism&EU?1a}j_q5f#Xe28daQkY3#zxSX3KQ47uU=ywhwt7X>u@TW1wBOLm)0C4(;=H
zsqa4i;-;Nl)k(%R$xS;E_iozReSAjZ7dP=5dEJO>cXm(r@_M=je7mQ?-F;l+kgty1
zP(^ul)9W|w+}<I@k82$AQQoGV9d$2C{8`BBuA8R3BNE5>zzjYqV&;^W_e<dGUHe-4
z*?q@f)HwYtuhI5v8zp`%o&NkDa`bB4NWNa=ect($8+<5(yl%#yM?H9b{EyPleqNG$
z*NPBC#@B1fuTdWJGzK5aFv0m=eCg9wyT{hP_EN{nZ?AoAXMG*6+u!``rZ2trYb!?=
zZTx8akG}igmgU}j`nw<6_|dw@$k+Y!mtJfC(HEaz``Ul_;)@?z`&!3COa3&d`l!14
z6Q^Jp&^N@7n2fd>@<$Cca*L28(gl=X3Q5##myUM86}qGnDqypvv+IfgQc$|GN|GiC
zWG+!a_>gx8%ON;sj5N%Y$2%+?e^Z3t5XnLVh=d3-m$ZQJfoF@9FQANHgEY*R$1RqQ
zWsocnQjp6cjU<u;GM6Y2L6!`5OB@6}in|Sa=EmKc4-h^8ktC4-6cQ+885E7aYQgYR
zhIVopP9;;j3~@Y}mQv&iWuy&}OIiR(igXM$TgsuRtx^~@w3EwlR+;FDWAVvma)cRW
zFqE8VrpZW`?C^v$Kj}>6AF|a6;bMjIG!88jenS9h#6(g=fy$_CGsed92)1@%KE&~4
z#xBUy$^tp(j3{sKmC=qiGxih4E^@edLF87#7cAe=);NGfImSeR%BXCojQy0cn_gS9
zfJF>yhapZU6FQEzwgG^A#)8BBy?M-Iee}~4!;iqXxlW{TzG`=VWVAoe+1R)X^O|6B
z?vegrQNa~KqzBhKg031Sv1;}_`b6j=z?V&|IH#7LzjQ%n>MvhgHLKJ9D_5SynhGp0
zIQy+Pzjf~P84#Dwp1$duZ=64W?ZUZJZ=Ab);quw@Z~-uT<;sQ2Z(KT$L%?pnbo$ce
zOK)B{bLq`%v)3-1MJjORS)|ThnZ11a%(+WgM{wcH`J2yxVfOL`99VX3_R9H7OulyI
z=5v>4!H41iNWbYEn9rX7*10q1&!1g!=JchrZ>~6Vj{47klaj7cFXW)ixoaS2FI;=`
z+Lg<fuAILHu@H|`;I#`>Mm(?F=PzFt{j*mtQ~&JcYf>6^h^#ATiBP=)`oVFQ`p>(5
zT#9~Ld>Q&Fc^3K^Uzw$*YgaB@6Ga!!UqgjvXHEYsXp#^;tNLeWMZYAW9gxnTcEEhm
zf7$fkj8;Vb(d^U@y;rE8EyiGG%w8mc98u)@-j)6<7f}C8=g;G2T{{2fic4tUYnRWT
zGyS-+60~Bd+Ktmcd*$X!Y^p04&`9Tjc)%{MKt-YJGH40bWJ-99`padd`d?X4`-^_c
zp?;{t?ZFcc$^38XU1NEK9tl_Eu24eAcUB+Cx$b|cpU=Y;l;rbaH4{1%R`Eicp`h1j
z@cSciIea9MXTq;o<Ffr3@KscF<wCu?$eTnTn3ybYrj=%|cCi@CR8BD#=4Fg+(=olk
z6wjts{G_Jfvkl(wq$p4_nap6xKp{)f6l!VkD_aqsM4GYLB$v$$9ZQ{P#j-IL!Hm+Y
zM39aoK?_+1B^&96%9b+rl+RB&eplHx8J_4?n);<=M8D*iS!MJJdqMB@=}+0bq)%IJ
zO6_t1inmv+Z$vL90HxkUO)j8Vk9IS(Y@;f|?eU!3O@O251C!`;y^c&b0k0Yw`28k+
z=&y?NqEv}~_$8DOZcvGG7hmU<q~k#b!wrI);1iJP#NQSD8*B@bIX5gG_F3seH5G<^
zBEvNM`up-Dy^n@Ip(6bW-FO%4k1QS<bU##Knbn2kN%H-DQf%)CoRzp05q0qaqv%*o
z+@Dj#J=IWdba1RlW~AU;13)E1N)cP)BUBNQ;l{mK?cEhrWk*e3=ZLV9jfG8x_UaqV
z9T*wzld5ry3f;FNA5Ypt9P7`)*s+2)#i;Z-nvJLF6mOr5jKcK}<(`Q5HjBM|nMW~m
zA+|&vik0*0g*8_bqvo9~yz3EFSZ-Cpv6#!&1A1KcyHyqI18dLsmlylWQpfAJB%wuZ
zxTMZTK^D3$(g!UZtIPn$IqWf$Q#yQ;(nYe(DK#KzcEkr|;_`HK10xuVHOB`r94$Fs
zjI`<vGV0eXlM$2e$Y@R46artmTgi@WwpwKCXa`3$RFx$Mj>;7Tj^HwXYFYKCmd%Q(
zTe50-r&U0$!U&Oy#cXJCkYNoZ_4F)}j8as74uUW!m!Rlf67=W+B0W7~+U_2$z=H~b
zT7~x2;(;_0uH6odWGrQt3~LmjBqQCCT;NlZTSMgNilxDT`i~nJ5Ys+2pqBQV!D<!S
zRf}UuqXxHwBN^PzL1d1RL}4tTZu$sEQI_H84hWeHCdF^vvdPJ%HVmkPf#u`Xw#(mf
zKxr%*6aE6`675JC7|2PwW%K$zd}MN4GU5^DTO<hsa&pmt3rlDqieAjZJF4I&C=#yK
zrjN*JAhJ1PI;b8=Fst75J0?;GrF0@OX6hP%Vt^wP(y~?noSduAB~}wx=MqrW!wCOj
zN6t;~Du;-cp#H=f)4%3mW&LBW*RcT?Mfy=Uu>);P{j91twIh`w*;__2k$4>Yn3*#P
zKhwkn2B`#bk!a9n=Y(6DiPS5ZnT)hQ)!ND=Jn_`ap*(UdSU=P~#R6+xuOkwe&K$+!
zcv8twonD}RqMs-XxFZrsHd+1AqZadMFRQyS{Rc%3d}1h03JpD?z|=;n@9nGH5;x(7
zqrDRB(KB20ht)JYirPO?IAMB=^(O`%5gxCuqc?w40P8P-`jfa4{gTopaUrG26TArW
zP5)6tE8$>|8y~;<L%ptNX>v9A21{t-R|x^w<rji@wsnCNmVIf$4T%eSyF{Mr1;z|9
zgLD>xGZFl(o#(?&13%7R4(F2bZp%|2Wt7t!Pjfrs=?kS<zAW!NUbiqz@xRgYpX-EO
zIA2;+Go8iCR^85xJ_sBvC2A6NUy^;?+<?9M_o_R-1eaGc)2T(EmVdVD;2lZ@hnkjG
z|0H+E@tw>g?{|Iz*I96ZRV7qoEvc47O_q5L&wS_ABio=TTLn1{&rHACwGo@dW$!o6
z9z5CAd}Nz%2+y8uZ+<rG8@cPBX<s|j!A;+kQ~yl$lv0#~t?K*Ib<Mij{7^lPc}doB
z)4Ep3%&KE$P_G%^l)m;^FyQQ!@TA`q<V>a4uBX>77$N{iU-Nn0dhfu(d*#f<N(V8P
z_qz37tIgMHa;!`cR9(PVe*?b9S8;t2*PHNJyeOy|>qYl;@o!8V09_4we;(cB#rsG3
zZe2Cl7escq92moKv-!ckk^JJI>OOXEYq7oM0bmtG+`mWN+1?aXb#x#Nedema1a80w
zz2qv+w@~S_m{J<CKfmbul`g8F^e3jY8cP2Uu0Mniw%b&V51_;%n!UJO)$$`_W7q{%
zR5cFIR?zZ&$oU{XUNvfoSM43QXQisW1|{oF=?{Qx+ghm_ZlY9e(E_Sg!@D*|)m#gN
zSGg8eWqiQ3R4qV@JR5Up`5weK<Fg!E*qE$Ky~>S@<{TIs8_x~qv7f5=iQ_}-Pu${Q
zY3Kfl;YS~agbzaA0`|SF2x{&h8J;-MKkP1pAL#AR4e#xq7#xNatlVApknX%Q>i*oY
z`Y&bPs*Z{LV1M7<2md8`A?C{^Uo=0+HYcvIhF}f2h4m)gz{k^E<*-$JX^Z>`|2F8y
zaWlTY5U<4M`F8ead?ZGx05}fKF6EW$lY-(4^Ao#rNVXyF?Zu`=_>^6&9%G^S)p8pE
zKNQ~p$RQCK7FmW1|FGHo<7w}qj{D$ORK|beI9L0`dCSrN63UmeYoTehf1$kP_}*3d
zdAjQ`?YHOYu0MC*TUE8y)1AvYpE`YUbn~x%`yc)ZJ>m~Mr_`!tSKmfQY}K;fw~)8;
zdtdqS;~%?a)qTB3U*G)xFC6ZD<>FOPPyfN2Z{=4mTl~~%oGW+u=~v$TDGsJ<d5WjZ
z-SXTIFJ688*M9X2hm|_~?YE!&*audAuM=m^p_ljVA7B0W2cBC7ac?!R(i6HxI7(`_
z{oY%?@)tk)`^SFGy6v|-clf72d;Hg}+fD&LeDY(Y*lmY^A76c2so+rEGM?A{J0JJ%
zfAu1s^zGgMx|%?!f<LIw+>7o#<m_NCAMYBeqoi8rb&~ts_q6>A=ZmxbZuy0uFYfK<
z9bv8ay>{Mt*nV=}d7=IO_8-_L<dybAi#6Bzh{3^dBN&IhG$4;dA`CWS1C%iY>@bxv
zl!-3I$Dh(sM)!^BzB$+ENDKyMAZslo8=WwmNgPaY<J%0z`g{XiM8A*VaOkGU4(L}q
zy3|0oc+Ej&^MM#eC<ygxzQ;4zEGPO6J>8^0|3O@?v1&t$s0G@fh=G$OsB)mcQfRD{
zA?d}_nYBKtR$)4`WX{t07dF{fGJm+XFh4gqJkUQjj=oRvG+Ly`R<b-knioG;En?6d
zGoj(6WrbDiSc=L4Vs7vbKe&`@BKBJmkWhkcnqld3l%A%{8FyH&BP3HlcUH^(Gt2fZ
z*Gb(KhRig$$dqve!9Bpx-<s_Z_l%);QIM5_XE{PO1-ibHVqzUq@hnN6U~5MQ(_762
zD3-NKUY2$s7|9*$@u03Bv8%g7bDUP{);K%$T75--D@XUK04VxJOhJFK9TEMm#}``|
z>Zb5p@zX%fjwz!tiYw`2m6(ARCR)V-9n3RQ?}N~F?bZBm(5_T_wIqTl{!VW6?^x_R
zIq!sd<jX1tcZBoBkvH#0`-ev50KxH+3F`g1p@Cq@#3&X>h9x5>XpHBEhW3Wj<uPNb
zrSQ^yBje*E2V$pag%i>HbE8<fFgBjg@sy?b0?bfn#9E%6rEhJOa_ua{xH<h5&-4nd
z8JWNtUa@I$%hZFlgb4LUmQ2iZqL&FNI!SEdTGgWKQd>^b(t%tr#vlS+Xn-eb{0TJv
zQjSXu6_$@go|xYK_%)6{6XhhEB)!$4osoqXW25<r-u}H~LpeK%@<4wOd5$c*!i|&X
zXz}>S=yg9tx`x8PJEaQkIf_3iH%ejor#7ZdmKay1%bs4wZ)UvxbxHC)VJk-#ew1Th
z__uI5p8ozk7Dm(APw}%7DqB#E7OwIpRhifC{z3e3V>|eNMjuWC_t-OJZI8L3Cv(fY
z<|{C!#}!5XIg-B&nt<P2Nm!@YWoodyT>ET5(Yp?KFcCZ4^&M~Qi}XO^>z^V&9;NH8
zBIV}jxy;oW3VSvF^hY{MC0(#cUbq&^%SE0q@#W55(xNh(&-qu5jc@3Gl7)n)97Ba@
z+=3n94478NMQgSN7a+5iP;ho0dYfLaZd`8dH%BON?9weF5XBXlUe7Lr&@cW_p!e>)
z>4zaj`n3b6hCxKwLr}FFqYhchXjniJmls06IL&c2FbH-?hIJr~mPACp%5i4OQ{FMU
zhjl@C@s{Au-7EE5uSb88g1OAZnor&{dVk@)6fZDLI5t<IdGq9eZE)q?jxr_S01DxR
zKEu$9pNkZB&5&M)Mb9t*G#Jbh<VbK-st~&-K_~Kse82K;wf<P?uM_LdpRI}fc*heD
z4j#atVH`n+ffo$4E^i+n&kydyZ?%lGE?XK@cjU(Uw=^@G4pgguBZt4PiAVZ}`}2dn
zA3l(Ke0zUx2pt>aRK5b|uQ=zU!&sWSFW38McmLQRH1d2>D|7GJ(XU*LNN@5o2Sy(2
z=Q#JC(f<BE=Z<T**|~H110(rLT&s(?9vqo?WIue*jXC=kPAwzU2DSH(^bHOSVtf{(
z`@y2>pr!{d<?e_7y5)=i`}yDcU}s}>P|KuU?DGBDUwrH3eZP73_NBqn_5&jm!{h(!
zzij*ck1gG}WN}dY0Q$ALaXC3Gz}$wmTzxlwA4d)}kB#Oghnx3dAiuB@w83p07#YH8
zdf>$VpbG7}#(8t&<7m`Rc<W*YY{ib@$0mkwe{%cK^I8-v--eF#wxK83JA+x<M)JM=
zeeDp9usB$`8)wVrhB`+^hWbV(Wd>nMP}jb1Y$QKQ<F#7kT@tLIq^#dPDZX^a@GjgX
z=2r!^+5X)4em+thV7&P^NAg2`-g=7;{ofD#?ccO-tqoRfM-ybRFRF7tpMtR^Ec>yq
zHU39_76lEvdEOdc)REWS55Ij_hip?rk>2Cj{{H^a#X(}v=-?wG;~yU9%)qX}$MBdS
zV1mW!R~sz7e}vV*l%9-}GrJ^2@95WXEL-iDw{BVzEY&Bw9qfyP`i_Z59~~V3@Wg0e
zZoFR(fI~V)-IjEY42|Shp_zA~Z^Np=hMFL;8}A<Z5AWe^?#7dX^W&Cfw{C0i+4W!*
ztQ*WPx_wbl^T6<Zc|0|JP*9sivxO5iaJkn#g45+-xinAb@}K>bX5;y!iXG$q2XrEY
zNp<af@?$Mp?JepUd6I8=`A@Fib!7V^wZUQ>Stm`irTY-&2U~Uv1Y3Uhv|LmL)!T3f
zW@q`^KsBLijtt}Jy16qqyc@0GGrDVJWE=_0_U!M^;hy1nsM(I+7=IjAhL3}Mb6z|<
zvG{B68@dFarP@>vprbaZ_o<RGkX}28+l-gF2Zk4+E$HnuoD{k*Hl0(ilS08K;?p^~
zUc9R0Y?B_Co<K#m0-ux`myO~cg5z{psQAtLX8+p9-mE=2@<8jN@L2bK$=LA7<P-7L
z*pXKsDYbXsP;}XUyiZj|S@8&1q(2z%M@IT?e6q&|#|!Urk-WK<#g9DR|3v@ZzTDtg
z=@NAv0l;rvWCS46bsd`+=CPv4jJ1ot1jL38$`&kB`O%Tl(Na@#j}MOVQSbthjSzjg
z{G)sM4n8#UNPJJGyCQZBAB6Cta*nZ>^W)&EbD9_Az%vT&k(DD#hrBUi1)i8s<*TJq
zmE&r``*N5d`j8<BWigay#>e%dY>^Q7AT3UyRN(-IYKjt=aTV2bEV4t(tU{(5U_wGQ
zEX1ZEl7ofi!ch|987v|hydY;KTqVNLreJ}1VFmA1(xIBLaFjz>T{<#conlEsoWV<q
z9xVeSMJN;-&U!|e;2EC7hGSS2*tR{h113v4)YQd3T#3$4JpDcTm(wO(y~EG-w!fE)
z;`PXgmh<a(TK;;<3GY0!$ar>7<4?w1i$3dW7XQQBZ~xB6bk=c8Gv;33eiHMv=+a?%
z<*M&p{n_J~!<E@qS={&7JvQq|>c>}qrc`i<Q^G&JI=)%tVB-1PKfL(&`OT2S>00n!
z{OKsDnrfjAfBT1{cT33td51Am{1z!r^sYMml~>-pIC?kDBJb0G@cPB!k2KdQwd%gp
z7l-cx?_%b0#(C&YE%|Xybw73boXdF*)8c=A?$dXu)Q^9l<*7ga(Wf)bb=1L`Yfw^>
z)EB<ja&U-JVS!RF|H$Rcx9C&a55`2=4^*N3SP9CKsbx$xhqJcQnw+)Ol0~z>s2k_N
zMUJ(f%R!=)G&yWPnZR~?Lpj!dE=Sw%IiE$A_9L&#S@d>AIXe9w+9Q+k(24DDx{)vJ
z^Ki_ns?wMh-}4!K><Tab{%&4`J}gp{7$-U`q17$~b!G{}RFa8><wUw87P>^g4n#;^
zG_paUa5SbZk{PPg*)0rTb!e_<kSf+s$GXbH_||=TeXGr8Ii`Ge%NbIss9r6EVY?2!
z!sM3*qm3#8AFLDg1N$`3XVKKfGH2B^1M_Wh2GAHr5qo@CWzx3qI;J*Y*wE~BOqpI(
zyPF~vOU3UK`7!<3ZOYi16@=bxv}<y*wS)YVlj9wL5H}vy2Jw+Oj+Cid-gVLMxKBsX
zRQ#mXyMR{znEnaV-_x!7dnTt%zv9e{BdtoMW~QjO8)v|Yexx|2;G0ia<V?Xy%x{t;
zP6?*M8?+BJ9%N~Ee{y<y)cT%>wWbea0}<F#*ib_NP8qK6S&zbQhw7KxusPHpu><#a
zqn4E7VH8f$+LIgF(XDnszv<J`MnbQOK&~iNO5%+(GaYg<gSGe!GgFEj0<IM7QSwJB
zMCT9nO=*f+<+;T;bGSniW~No&<YWx<LgSHZ4GW@uB-mq*=T1``H~4s`VHbX5aG-3D
z;X#t&A{kjU0~-4Rb-E>y(cM-Jn{C%s9DO%d9Mzrnnw}mk!GU}{a#5U|FnZGQAhSa|
z!o@R^D$!GR>FB$_;#erbE8DmOEYiOwrXRbRbX^VB*~CLQvs66u6lW`;W%*E(Z2qGi
zD!(a)p@HFUtWZw7U1h_WFEs$PWMS&dS;8{B$SKui%a?2mR+I7QeJ}VbPIOsD3Apew
z`t{jpEUVuYxqinI`ST^%jzZZfO5UvN3o9Nr0G3jPA=DqH*sev)rAU(PT@14;UAU7^
z+w+K%xEoE6PdYk^|Lrnj(vk+fauL_>a?2F7a#AdGHVW&#p7un<Cqs2NYh0e!_ucA`
z$ZfPA2fqP+XTn+72yb|)^~H*$G?Rc~PWg+5IT%d8>n+>}dk`wGal=s-@&$3kdPBU8
z-Pmx^#9cLX+Q^?96pv<N393$F%s-l0Jir(qk&KPzUDqgQtgMX$Rvbda)|mdi`zFTr
zU+)lNp`h0~GVGdrav~40LlgZaD_E-I1BsE*RUbo))uE=(r&JcDYl7vNH_-Wy66Y+j
z1rp`G%tfTN-B4+n8!GM2cOcF0M8uacCZq<j0jzS1&aEdh%DZnc-@Ctp=e|gr&fN;v
zFK_O9R7u|aUQzfHh~EYEc#2<Y3HZw^0i6d4SZ62!y)y~uT1!xWjwep2U&T|W=;e?B
zE~q5HpPmGIS7Rvs0aC}Wsg&urbCSy)gX}Nvh2`jc<^RPmN4N2W&)B%cy=IRc9evAl
z|0n}PN4BFX?c}YV;$hJ|^7)n{9Ln$`pD`f8qob#fyx!NgZpG(1?F8v0wiIK3Zu5~;
z0*T3^HJchgzm+K~WSj0Ec0ao<DMhxXj&A?XzVuq%yIVJd3BLJH^{Y5BCU@pv%K=_^
zWYbATi3Y?C5)=LJb~=q@3;G9{eA3ZPORr8y6sHI{RcDk43pGe0Qg9)OjcG}t9{ht6
z@aqX#4RD>&kZwq48q)P?u&bm7^0(u_3S7|5hYQ@AXlO{Y17VyLh0+PQu)u%(Lr8;$
z(o7mMkt_NrhAO~<3z3#?OX3RO)kKoout*2I8C=vSGvEMEJNn2do^C{!i59Yl1nKEJ
z+q0q#r5oV0ANr6Azz34xPDARKVNs}rWCqp{HP2<l5;7r&iOiFKnHCB_F(&Z;B!pAk
z!NyJqL4n4s3Tvcu`%ETXp8`;?1zLmu1YAIZ$n$*CEY(1@^M|`9Cxyw8gdI78cUDqu
zvZhN`d65LoHD4Z{-~6;*I(mlUN9=G3;62YX=_7LJ0%|6qGjsQtUQHT8yeg14X3<Lh
zZL)j{ic_1_oD;MXM?joFboV4O?w0A5e^(L5Ntfc+3@c8?#^DziOFy_exE4QA9Miv{
z0sVnJ<5(3uj(!>zN-W(op39HpBHTKwyLFfC_>G6!cgX>o%L}_`OY(d}ZE1$>tu4uj
zZ?i37`1f~S=fA;y%NX?64cq$c&bv?ff4-tiQkG$}_@coe(z)X@2YeUy4&@%p*@~1p
zU6HcrRV)sQZd1N4A*(_mkg~8{%GCoCLqm&oZ!+rDTxM@_(`<Ziatk;seYm@Oz7NaR
zbSG-sapr}_(>Sk!r$_MU3dV`*qVq41C&`G4`Rb-i_&%E!NyRU-js7xG;bk`R+BUCW
zO&1ke5i{2c>5`Sz5na9jC-y?~PF!_H-jX2ovHqcOZA<)p-0hFN;YOWVdUnLjIo6F|
z*E*rt8*TYL8l|2(BkQJg<58@+yhJ*z@<L0L^~PSjx#_yL6qc-bkF+t?w&rs~5r?5=
zCK1sy#6hr(x!pjqC}!7<!I0fNghs<Ab}bQn3+!ra6fGH%7V)M-*<-Qi)yL9FHl#IC
z^}-G%EnaOWFb<gWF`(oKvO4sQMhxrdx=et>I=@&T+8$ru>x;MC97<v@?0zWZR$SOo
z4_e5G%y<>$_$K6+pp|iNVMkqtZSpmR)I`OG&@Y4Ns-KC}k5nlg`c#t=NWzbz2d?DN
zRYkErBN!w_7_V}v(a$GbzP$2M5a{cEG={dzaPq$L=c6?UPOIS4bm_l>KK)|>9OrSo
zz*%8Cede8-@t74nZ1^R^7hcwjm(QH})*Cm410X&Sas~=tKJx}Lh3#cOqQOcRfGegD
z>e>{OokptTp`cS%PzS+ov*S~t9WQVhdJw$u&2Rq6H<pJ3F*+Q>m|5RIrgEK9ZXwD>
zNllH}5wumXBRG77{d1i3aq85UU#blUgnVF#hi{xX^%63b3ul(aL+MG9^|Bm77D6QX
z;N#s%o_|XQEhLZC)^r6Nw5`FBeDdB^8sW@n{1mk*Ki)8lg6VJUHbvd0$o2Yfk?UdM
zrY;r1*{-xrc7eaCRJEkcsoyHtXg_-X+pG%Wu^HdAM=yHzWS|}n3{j`~^}E%DJ^fuO
Ke-aa;1OFfH8@*ou

literal 0
HcmV?d00001

-- 
2.22.0.windows.1

